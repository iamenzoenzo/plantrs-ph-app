{"ast":null,"code":"import _classCallCheck from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{Link}from'react-router-dom';import dayjs from'dayjs';import relativeTime from'dayjs/plugin/relativeTime';// MUI\nimport Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';import IconButton from'@material-ui/core/IconButton';import Tooltip from'@material-ui/core/Tooltip';import Typography from'@material-ui/core/Typography';import Badge from'@material-ui/core/Badge';// Icons\nimport NotificationsIcon from'@material-ui/icons/Notifications';import FavoriteIcon from'@material-ui/icons/Favorite';import ChatIcon from'@material-ui/icons/Chat';// Redux\nimport{connect}from'react-redux';import{markNotificationsRead}from'../../redux/actions/userActions';var Notifications=/*#__PURE__*/function(_Component){_inherits(Notifications,_Component);var _super=_createSuper(Notifications);function Notifications(){var _this;_classCallCheck(this,Notifications);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={anchorEl:null};_this.handleOpen=function(event){_this.setState({anchorEl:event.target});};_this.handleClose=function(){_this.setState({anchorEl:null});};_this.onMenuOpened=function(){var unreadNotificationsIds=_this.props.notifications.filter(function(noti){return!noti.read;}).map(function(noti){return noti.notificationId;});_this.props.markNotificationsRead(unreadNotificationsIds);};return _this;}_createClass(Notifications,[{key:\"render\",value:function render(){var _this2=this;var notifications=this.props.notifications;var anchorEl=this.state.anchorEl;dayjs.extend(relativeTime);var notificationsIcon;if(notifications&&notifications.length>0){notifications.filter(function(noti){return noti.read===false;}).length>0?notificationsIcon=/*#__PURE__*/React.createElement(Badge,{badgeContent:notifications.filter(function(noti){return noti.read===false;}).length,color:\"secondary\"},/*#__PURE__*/React.createElement(NotificationsIcon,null)):notificationsIcon=/*#__PURE__*/React.createElement(NotificationsIcon,null);}else{notificationsIcon=/*#__PURE__*/React.createElement(NotificationsIcon,null);}var notificationsMarkup=notifications&&notifications.length>0?notifications.map(function(noti){var verb=noti.type==='like'?'liked':'commented on';var time=dayjs(noti.createDate).fromNow();var iconColor=noti.read?'primary':'secondary';var icon=noti.type==='like'?/*#__PURE__*/React.createElement(FavoriteIcon,{color:iconColor,style:{marginRight:10}}):/*#__PURE__*/React.createElement(ChatIcon,{color:iconColor,style:{marginRight:10}});return/*#__PURE__*/React.createElement(MenuItem,{key:noti.createDate,onClick:_this2.handleClose},icon,/*#__PURE__*/React.createElement(Typography,{component:Link,variant:\"body1\",to:\"/users/\".concat(noti.recipient,\"/plant/\").concat(noti.plantId)},noti.sender,\" \",verb,\" your plant \",time));}):/*#__PURE__*/React.createElement(MenuItem,{onClick:this.handleClose},\"You have no notifications yet\");return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Tooltip,{placement:\"top\",title:\"Notifications\"},/*#__PURE__*/React.createElement(IconButton,{\"aria-owns\":anchorEl?'simple-menu':undefined,\"aria-haspopup\":\"true\",onClick:this.handleOpen},notificationsIcon)),/*#__PURE__*/React.createElement(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:this.handleClose,onEntered:this.onMenuOpened},notificationsMarkup));}}]);return Notifications;}(Component);var mapStateToProps=function mapStateToProps(state){return{notifications:state.user.notifications};};export default connect(mapStateToProps,{markNotificationsRead:markNotificationsRead})(Notifications);","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/components/layout/Notifications.js"],"names":["React","Component","Fragment","Link","dayjs","relativeTime","Menu","MenuItem","IconButton","Tooltip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotificationsRead","Notifications","state","anchorEl","handleOpen","event","setState","target","handleClose","onMenuOpened","unreadNotificationsIds","props","notifications","filter","noti","read","map","notificationId","extend","notificationsIcon","length","notificationsMarkup","verb","type","time","createDate","fromNow","iconColor","icon","marginRight","recipient","plantId","sender","undefined","Boolean","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\n// MUI\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n// Icons\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ChatIcon from '@material-ui/icons/Chat';\n// Redux\nimport { connect } from 'react-redux';\nimport { markNotificationsRead } from '../../redux/actions/userActions';\n\nclass Notifications extends Component{\n    state = {\n        anchorEl: null\n    };\n    handleOpen = (event) => {\n        this.setState({ anchorEl: event.target });\n    };\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n    onMenuOpened = () => {\n        let unreadNotificationsIds = this.props.notifications\n            .filter((noti) => !noti.read)\n            .map((noti) => noti.notificationId);\n        this.props.markNotificationsRead(unreadNotificationsIds);\n    };\n    render(){\n        const notifications = this.props.notifications;\n        const anchorEl = this.state.anchorEl;\n\n        dayjs.extend(relativeTime);\n\n        let notificationsIcon;\n        if(notifications && notifications.length > 0) {\n            notifications.filter((noti) => noti.read === false ).length > 0\n            ? (notificationsIcon = (\n                <Badge \n                    badgeContent={\n                        notifications.filter((noti) => noti.read === false ).length\n                        } \n                        color=\"secondary\"\n                >\n                    <NotificationsIcon/>\n                </Badge>\n            )) \n            : (notificationsIcon = <NotificationsIcon/>);\n        } else {\n            notificationsIcon = <NotificationsIcon/>\n        }\n        let notificationsMarkup =\n            notifications && notifications.length > 0 ? (\n                notifications.map((noti) => {\n                    const verb = noti.type === 'like' ? 'liked' : 'commented on';\n                    const time = dayjs(noti.createDate).fromNow();\n                    const iconColor = noti.read ? 'primary' : 'secondary';\n                    const icon = \n                        noti.type === 'like' ? (\n                        <FavoriteIcon color={iconColor} style={{ marginRight: 10 }}/>\n                    ) : (\n                        <ChatIcon color={iconColor} style={{ marginRight: 10 }}/>\n                    );\n\n                    return (\n                        <MenuItem key={noti.createDate} onClick={this.handleClose}>\n                            {icon}\n                            <Typography\n                                component={Link}\n                                \n                                variant=\"body1\"\n                                to={`/users/${noti.recipient}/plant/${noti.plantId}`}\n                                >\n                                    {noti.sender} {verb} your plant {time}\n                                </Typography>\n                        </MenuItem>\n                    )\n                })\n            ) : (\n                <MenuItem onClick={this.handleClose}>\n                    You have no notifications yet\n                </MenuItem>\n            )\n        return (\n            <Fragment>\n                <Tooltip placement=\"top\" title=\"Notifications\">\n                    <IconButton \n                        aria-owns={anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpen}\n                        >\n                            {notificationsIcon}\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleClose}\n                    onEntered={this.onMenuOpened}\n                >\n                    {notificationsMarkup}\n                </Menu>\n            </Fragment>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    markNotificationsRead: PropTypes.func.isRequired,\n    notifications: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    notifications: state.user.notifications\n})\n\nexport default connect(\n    mapStateToProps, \n    { markNotificationsRead }\n)(Notifications);"]},"metadata":{},"sourceType":"module"}