{"ast":null,"code":"import _classCallCheck from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/components/Plant.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport DeletePlant from './DeletePlant'; // Material UIs\n\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { lightGreen } from '@material-ui/core/colors'; // Icons\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { likePlant, unlikePlant } from '../redux/actions/dataActions';\nvar styles = {\n  card: {\n    position: 'relative',\n    marginBottom: 20\n  },\n  content: {\n    padding: 20,\n    objectFit: 'cover',\n    minWidth: 400\n  },\n  media: {\n    Width: 300,\n    Height: 300,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  avatar: {\n    backgroundColor: lightGreen[500]\n  }\n};\n\nvar Plant = /*#__PURE__*/function (_Component) {\n  _inherits(Plant, _Component);\n\n  function Plant() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Plant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Plant)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.likedPlant = function () {\n      if (_this.props.user.likes && _this.props.user.likes.find(function (like) {\n        return like.plantId === _this.props.plant.plantId;\n      })) return true;else return false;\n    };\n\n    _this.likePlant = function () {\n      _this.props.likePlant(_this.props.plant.plantId);\n    };\n\n    _this.unlikePlant = function () {\n      _this.props.unlikePlant(_this.props.plant.plantId);\n    };\n\n    return _this;\n  }\n\n  _createClass(Plant, [{\n    key: \"render\",\n    value: function render() {\n      dayjs.extend(relativeTime);\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          _this$props$plant = _this$props.plant,\n          caption = _this$props$plant.caption,\n          createDate = _this$props$plant.createDate,\n          userImage = _this$props$plant.userImage,\n          userHandle = _this$props$plant.userHandle,\n          plantId = _this$props$plant.plantId,\n          plantName = _this$props$plant.plantName,\n          plantImg = _this$props$plant.plantImg,\n          kingdom = _this$props$plant.kingdom,\n          phylum = _this$props$plant.phylum,\n          klass = _this$props$plant.klass,\n          urder = _this$props$plant.urder,\n          family = _this$props$plant.family,\n          genus = _this$props$plant.genus,\n          species = _this$props$plant.species,\n          likeCount = _this$props$plant.likeCount,\n          commentCount = _this$props$plant.commentCount,\n          _this$props$user = _this$props.user,\n          authenticated = _this$props$user.authenticated,\n          handle = _this$props$user.credentials.handle;\n      var likeButton = !authenticated ? /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Like\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FavoriteBorder, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }))) : this.likedPlant() ? /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Unlike\",\n        onClick: this.unlikePlant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      })) : /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Like\",\n        onClick: this.likePlant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FavoriteBorder, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }));\n      var deleteButton = authenticated && userHandle === handle ?\n      /*#__PURE__*/\n      // TODO include OR for role = moderator\n      React.createElement(DeletePlant, {\n        plantId: plantId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }) : null;\n      return /*#__PURE__*/React.createElement(Card, {\n        className: classes.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: userHandle,\n        src: userImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }), deleteButton, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        component: Link,\n        to: \"/users/\".concat(userHandle),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, userHandle), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, dayjs(createDate).fromNow())), /*#__PURE__*/React.createElement(CardMedia, {\n        className: classes.media,\n        image: plantImg,\n        title: plantName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(CardContent, {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, likeButton, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, likeCount, \" Likes\"), /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Comments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ChatIcon, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, commentCount, \" Comments\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, plantName), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 85\n        }\n      }, \"Kingdom: \"), kingdom), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 85\n        }\n      }, \"Phylum: \"), phylum), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 85\n        }\n      }, \"Class: \"), klass), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 85\n        }\n      }, \"Order: \"), \" \", urder), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 85\n        }\n      }, \"Family: \"), family), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 85\n        }\n      }, \"Genus: \"), genus), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 85\n        }\n      }, \"Species: \"), species), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 85\n        }\n      }, \"Description: \"), caption)));\n    }\n  }]);\n\n  return Plant;\n}(Component);\n\nPlant.propTypes = {\n  likePlant: PropTypes.func.isRequired,\n  unlikePlant: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  plant: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapActionsToProps = {\n  likePlant: likePlant,\n  unlikePlant: unlikePlant\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Plant));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/components/Plant.js"],"names":["React","Component","withStyles","Link","dayjs","relativeTime","PropTypes","MyButton","DeletePlant","Card","CardMedia","CardContent","Avatar","Typography","lightGreen","ChatIcon","FavoriteIcon","FavoriteBorder","connect","likePlant","unlikePlant","styles","card","position","marginBottom","content","padding","objectFit","minWidth","media","Width","Height","paddingTop","avatar","backgroundColor","Plant","likedPlant","props","user","likes","find","like","plantId","plant","extend","classes","caption","createDate","userImage","userHandle","plantName","plantImg","kingdom","phylum","klass","urder","family","genus","species","likeCount","commentCount","authenticated","handle","credentials","likeButton","deleteButton","fromNow","propTypes","func","isRequired","object","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport DeletePlant from './DeletePlant';\n\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { lightGreen } from '@material-ui/core/colors';\n\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { likePlant, unlikePlant } from '../redux/actions/dataActions';\n\n\nconst styles = {\n    card: {\n        position: 'relative',\n        marginBottom: 20,\n    },\n    content: {\n        padding: 20,\n        objectFit: 'cover',\n        minWidth: 400,\n    },\n    media: {\n        Width: 300,\n        Height: 300,\n        paddingTop: '56.25%', // 16:9\n    },\n    avatar: {\n        backgroundColor: lightGreen[500],\n      },\n}\n\nclass Plant extends Component {\n    likedPlant = () => {\n        if(this.props.user.likes && \n            this.props.user.likes.find(\n                (like) => like.plantId === this.props.plant.plantId\n            )\n        )\n            return true;\n        else return false;\n    };\n    likePlant = () => {\n        this.props.likePlant(this.props.plant.plantId);\n    }\n    unlikePlant = () => {\n        this.props.unlikePlant(this.props.plant.plantId);\n    }\n    render() {\n        dayjs.extend(relativeTime)\n        const { \n                classes, \n                plant : { \n                    caption, \n                    createDate, \n                    userImage, \n                    userHandle, \n                    plantId, \n                    plantName, \n                    plantImg, \n                    kingdom, \n                    phylum,\n                    klass,\n                    urder,\n                    family,\n                    genus,\n                    species,\n                    likeCount, \n                    commentCount \n                },\n                user: {\n                    authenticated, credentials: { handle } // TO DO replace with { handle, role }\n                } \n            } = this.props;\n        const likeButton = !authenticated ? (\n            <MyButton tip=\"Like\">\n                <Link to=\"/login\">\n                    <FavoriteBorder color=\"primary\"/>\n                </Link>\n            </MyButton>\n        ) : (\n            this.likedPlant() ? (\n                <MyButton tip=\"Unlike\" onClick={this.unlikePlant}>\n                    <FavoriteIcon color=\"primary\"/>\n                </MyButton>\n            ) : (\n                <MyButton tip=\"Like\" onClick={this.likePlant}>\n                    <FavoriteBorder color=\"primary\"/>\n                </MyButton>\n            )\n        );\n        const deleteButton = \n        authenticated && userHandle === handle ? ( // TODO include OR for role = moderator\n            <DeletePlant plantId={plantId} />\n        ) : null;\n        return (\n            <Card className={classes.card}>\n                <CardContent className={classes.content}>\n                    <Avatar alt={userHandle} src={userImage} />\n                    {deleteButton}\n                    <Typography\n                         variant=\"body2\" \n                         component={Link} \n                         to={`/users/${userHandle}`} \n                         color=\"primary\">{userHandle}\n                    </Typography>\n                    \n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{dayjs(createDate).fromNow()}</Typography>\n                </CardContent>\n                <CardMedia className={classes.media} image={plantImg} title={plantName} />\n                \n                <CardContent className={classes.content}>\n                    {likeButton}\n                    <span>{likeCount} Likes</span>\n                    <MyButton tip=\"Comments\">\n                        <ChatIcon color=\"primary\"/>\n                    </MyButton>\n                    <span>{commentCount} Comments</span>\n                    <Typography variant=\"h5\">{plantName}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Kingdom: </strong>{kingdom}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Phylum: </strong>{phylum}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Class: </strong>{klass}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Order: </strong> {urder}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Family: </strong>{family}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Genus: </strong>{genus}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Species: </strong>{species}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Description: </strong>{caption}</Typography>\n                </CardContent>\n\n            </Card>\n        );\n    }\n}\n\nPlant.propTypes = {\n    likePlant: PropTypes.func.isRequired,\n    unlikePlant: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    plant: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nconst mapActionsToProps = {\n    likePlant,\n    unlikePlant\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Plant));\n"]},"metadata":{},"sourceType":"module"}