{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/components/Plant.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport DeletePlant from './DeletePlant'; // Material UIs\n\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { lightGreen } from '@material-ui/core/colors'; // Icons\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { likePlant, unlikePlant } from '../redux/actions/dataActions';\nconst styles = {\n  card: {\n    marginBottom: 20\n  },\n  content: {\n    padding: 20,\n    objectFit: 'cover',\n    minWidth: 400\n  },\n  media: {\n    Width: 300,\n    Height: 300,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  avatar: {\n    backgroundColor: lightGreen[500]\n  }\n};\n\nclass Plant extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.likedPlant = () => {\n      if (this.props.user.likes && this.props.user.likes.find(like => like.plantId === this.props.plant.plantId)) return true;else return false;\n    };\n\n    this.likePlant = () => {\n      this.props.likePlant(this.props.plant.plantId);\n    };\n\n    this.unlikePlant = () => {\n      this.props.unlikePlant(this.props.plant.plantId);\n    };\n  }\n\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      plant: {\n        caption,\n        createDate,\n        userImage,\n        userHandle,\n        plantId,\n        plantName,\n        plantImg,\n        kingdom,\n        phylum,\n        klass,\n        urder,\n        family,\n        genus,\n        species,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials: {\n          handle\n        } // TO DO replace with { handle, role }\n\n      }\n    } = this.props;\n    const likeButton = !authenticated ? /*#__PURE__*/_jsxDEV(MyButton, {\n      tip: \"Like\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this) : this.likedPlant() ? /*#__PURE__*/_jsxDEV(MyButton, {\n      tip: \"Unlike\",\n      onClick: this.unlikePlant,\n      children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MyButton, {\n      tip: \"Like\",\n      onClick: this.likePlant,\n      children: /*#__PURE__*/_jsxDEV(FavoriteBorder, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this);\n    const deleteButton = authenticated && userHandle === handle ?\n    /*#__PURE__*/\n    // TODO include OR for role = moderator\n    _jsxDEV(DeletePlant, {\n      plantId: plantId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          alt: userHandle,\n          src: userImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: Link,\n          to: `/users/${userHandle}`,\n          color: \"primary\",\n          children: userHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), deleteButton, /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: dayjs(createDate).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        image: plantImg,\n        title: plantName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        className: classes.content,\n        children: [likeButton, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [likeCount, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          tip: \"Comments\",\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [commentCount, \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: plantName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Kingdom: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 85\n          }, this), kingdom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phylum: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 85\n          }, this), phylum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Class: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 85\n          }, this), klass]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Order: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 85\n          }, this), \" \", urder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Family: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 85\n          }, this), family]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genus: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 85\n          }, this), genus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Species: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 85\n          }, this), species]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 85\n          }, this), caption]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPlant.propTypes = {\n  likePlant: PropTypes.func.isRequired,\n  unlikePlant: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  plant: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likePlant,\n  unlikePlant\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Plant));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/components/Plant.js"],"names":["React","Component","withStyles","Link","dayjs","relativeTime","PropTypes","MyButton","DeletePlant","Card","CardMedia","CardContent","Avatar","Typography","lightGreen","ChatIcon","FavoriteIcon","FavoriteBorder","connect","likePlant","unlikePlant","styles","card","marginBottom","content","padding","objectFit","minWidth","media","Width","Height","paddingTop","avatar","backgroundColor","Plant","likedPlant","props","user","likes","find","like","plantId","plant","render","extend","classes","caption","createDate","userImage","userHandle","plantName","plantImg","kingdom","phylum","klass","urder","family","genus","species","likeCount","commentCount","authenticated","credentials","handle","likeButton","deleteButton","fromNow","propTypes","func","isRequired","object","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport DeletePlant from './DeletePlant';\n\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { lightGreen } from '@material-ui/core/colors';\n\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { likePlant, unlikePlant } from '../redux/actions/dataActions';\n\n\nconst styles = {\n    card: {\n        marginBottom: 20,\n    },\n    content: {\n        padding: 20,\n        objectFit: 'cover',\n        minWidth: 400,\n    },\n    media: {\n        Width: 300,\n        Height: 300,\n        paddingTop: '56.25%', // 16:9\n    },\n    avatar: {\n        backgroundColor: lightGreen[500],\n      },\n}\n\nclass Plant extends Component {\n    likedPlant = () => {\n        if(this.props.user.likes && \n            this.props.user.likes.find(\n                (like) => like.plantId === this.props.plant.plantId\n            )\n        )\n            return true;\n        else return false;\n    };\n    likePlant = () => {\n        this.props.likePlant(this.props.plant.plantId);\n    }\n    unlikePlant = () => {\n        this.props.unlikePlant(this.props.plant.plantId);\n    }\n    render() {\n        dayjs.extend(relativeTime)\n        const { \n                classes, \n                plant : { \n                    caption, \n                    createDate, \n                    userImage, \n                    userHandle, \n                    plantId, \n                    plantName, \n                    plantImg, \n                    kingdom, \n                    phylum,\n                    klass,\n                    urder,\n                    family,\n                    genus,\n                    species,\n                    likeCount, \n                    commentCount \n                },\n                user: {\n                    authenticated, credentials: { handle } // TO DO replace with { handle, role }\n                } \n            } = this.props;\n        const likeButton = !authenticated ? (\n            <MyButton tip=\"Like\">\n                <Link to=\"/login\">\n                    <FavoriteBorder color=\"primary\"/>\n                </Link>\n            </MyButton>\n        ) : (\n            this.likedPlant() ? (\n                <MyButton tip=\"Unlike\" onClick={this.unlikePlant}>\n                    <FavoriteIcon color=\"primary\"/>\n                </MyButton>\n            ) : (\n                <MyButton tip=\"Like\" onClick={this.likePlant}>\n                    <FavoriteBorder color=\"primary\"/>\n                </MyButton>\n            )\n        );\n        const deleteButton = \n        authenticated && userHandle === handle ? ( // TODO include OR for role = moderator\n            <DeletePlant plantId={plantId} />\n        ) : null;\n        return (\n            <Card className={classes.card}>\n                <CardContent className={classes.content}>\n                    <Avatar alt={userHandle} src={userImage} />\n                    <Typography\n                         variant=\"body2\" \n                         component={Link} \n                         to={`/users/${userHandle}`} \n                         color=\"primary\">{userHandle}\n                    </Typography>\n                    {deleteButton}\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{dayjs(createDate).fromNow()}</Typography>\n                </CardContent>\n                <CardMedia className={classes.media} image={plantImg} title={plantName} />\n                \n                <CardContent className={classes.content}>\n                    {likeButton}\n                    <span>{likeCount} Likes</span>\n                    <MyButton tip=\"Comments\">\n                        <ChatIcon color=\"primary\"/>\n                    </MyButton>\n                    <span>{commentCount} Comments</span>\n                    <Typography variant=\"h5\">{plantName}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Kingdom: </strong>{kingdom}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Phylum: </strong>{phylum}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Class: </strong>{klass}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Order: </strong> {urder}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Family: </strong>{family}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Genus: </strong>{genus}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Species: </strong>{species}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><strong>Description: </strong>{caption}</Typography>\n                </CardContent>\n\n            </Card>\n        );\n    }\n}\n\nPlant.propTypes = {\n    likePlant: PropTypes.func.isRequired,\n    unlikePlant: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    plant: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\nconst mapActionsToProps = {\n    likePlant,\n    unlikePlant\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Plant));\n"]},"metadata":{},"sourceType":"module"}