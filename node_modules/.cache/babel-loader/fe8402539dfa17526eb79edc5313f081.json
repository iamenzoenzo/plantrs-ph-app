{"ast":null,"code":"import _defineProperty from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectSpread from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Component}from'react';import withStyles from'@material-ui/core/styles/withStyles';// MUIs\nimport Button from'@material-ui/core/Button';import Grid from'@material-ui/core/Grid';import TextField from'@material-ui/core/TextField';// Redux\nimport{connect}from'react-redux';import{submitComment}from'../../redux/actions/dataActions';var styles=function styles(theme){return _objectSpread({},theme.spreadThis);};var CommentForm=/*#__PURE__*/function(_Component){_inherits(CommentForm,_Component);var _super=_createSuper(CommentForm);function CommentForm(){var _this;_classCallCheck(this,CommentForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={body:'',errors:{}};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleSubmit=function(event){event.preventDefault();_this.props.submitComment(_this.props.plantId,{body:_this.state.body});};return _this;}_createClass(CommentForm,[{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.UI.errors){this.setState({errors:nextProps.UI.errors});}if(!nextProps.UI.errors&&!nextProps.UI.loading){this.setState({body:''});}}},{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,authenticated=_this$props.authenticated;var errors=this.state.errors;var commentFormMarkup=authenticated?/*#__PURE__*/React.createElement(Grid,{item:true,sm:12,style:{textAlign:'center'}},/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(TextField,{name:\"body\",type:\"text\",label:\"Comment on plant\",error:errors.comment?true:false,helperText:errors.comment,value:this.state.body,onChange:this.handleChange,className:classes.textField,fullWidth:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.button},\"Submit\")),/*#__PURE__*/React.createElement(\"hr\",{className:classes.visibleSeparator})):null;return commentFormMarkup;}}]);return CommentForm;}(Component);var mapStateToProps=function mapStateToProps(state){return{UI:state.UI,authenticated:state.user.authenticated};};export default connect(mapStateToProps,{submitComment:submitComment})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/components/plant/CommentForm.js"],"names":["React","Component","withStyles","Button","Grid","TextField","connect","submitComment","styles","theme","spreadThis","CommentForm","state","body","errors","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","plantId","nextProps","UI","loading","classes","authenticated","commentFormMarkup","textAlign","comment","textField","button","visibleSeparator","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// MUIs\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n// Redux\nimport { connect } from 'react-redux';\nimport { submitComment } from '../../redux/actions/dataActions';\n\n\nconst styles = (theme) => ({\n    ...theme.spreadThis,\n    \n})\n\nclass CommentForm extends Component {\n    state = {\n        body: '',\n        errors: {}\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.UI.errors){\n            this.setState({errors: nextProps.UI.errors});\n        }\n        if(!nextProps.UI.errors && !nextProps.UI.loading){\n            this.setState({ body: '' });\n        }\n\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.submitComment(this.props.plantId, { body: this.state.body });\n    }\n\n\n\n    render() {\n        const { classes, authenticated } = this.props;\n        const errors = this.state.errors;\n        \n        const commentFormMarkup = authenticated ? (\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\n                <form onSubmit={this.handleSubmit}>\n                    <TextField\n                        name=\"body\"\n                        type=\"text\"\n                        label=\"Comment on plant\"\n                        error={errors.comment ? true : false }\n                        helperText={errors.comment}\n                        value={this.state.body}\n                        onChange={this.handleChange}\n                        className={classes.textField}\n                        fullWidth\n                    />\n                    <Button type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                    >Submit</Button>\n                </form>\n                <hr className={classes.visibleSeparator}/>\n            </Grid>\n        ) : null\n        return commentFormMarkup;\n    }\n}\n\nCommentForm.propTypes = {\n    submitComment: PropTypes.func.isRequired,\n    UI: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    plantId: PropTypes.string.isRequired,\n    authenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n    UI: state.UI,\n    authenticated: state.user.authenticated\n})\n\nexport default connect(mapStateToProps, { submitComment })(withStyles(styles)(CommentForm));\n"]},"metadata":{},"sourceType":"module"}