{"ast":null,"code":"import _classCallCheck from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import withStyles from'@material-ui/core/styles/withStyles';import{Link}from'react-router-dom';import dayjs from'dayjs';import relativeTime from'dayjs/plugin/relativeTime';import MyButton from'../../util/MyButton';import DeletePlant from'./DeletePlant';import PlantDialog from'./PlantDialog';import LikeButton from'./LikeButton';// Material UIs\nimport Card from'@material-ui/core/Card';import CardMedia from'@material-ui/core/CardMedia';import CardContent from'@material-ui/core/CardContent';import Avatar from'@material-ui/core/Avatar';import Typography from'@material-ui/core/Typography';import{lightGreen}from'@material-ui/core/colors';// Icons\nimport ChatIcon from'@material-ui/icons/Chat';// Redux stuff\nimport{connect}from'react-redux';var styles={card:{position:'relative',marginBottom:20},content:{padding:20,objectFit:'cover',minWidth:400},media:{maxWidth:'100%',height:300,paddingTop:'0%'// 16:9\n},avatar:{backgroundColor:lightGreen[500]},collab:{fontSize:13}};var Plant=/*#__PURE__*/function(_Component){_inherits(Plant,_Component);var _super=_createSuper(Plant);function Plant(){_classCallCheck(this,Plant);return _super.apply(this,arguments);}_createClass(Plant,[{key:\"render\",value:function render(){dayjs.extend(relativeTime);var _this$props=this.props,classes=_this$props.classes,_this$props$plant=_this$props.plant,caption=_this$props$plant.caption,createDate=_this$props$plant.createDate,userImage=_this$props$plant.userImage,userHandle=_this$props$plant.userHandle,plantId=_this$props$plant.plantId,plantName=_this$props$plant.plantName,plantImg=_this$props$plant.plantImg,likeCount=_this$props$plant.likeCount,commentCount=_this$props$plant.commentCount,_this$props$user=_this$props.user,authenticated=_this$props$user.authenticated,handle=_this$props$user.credentials.handle;var deleteButton=authenticated&&userHandle===handle?/*#__PURE__*/ // TODO include OR for role = moderator\nReact.createElement(DeletePlant,{plantId:plantId}):null;return/*#__PURE__*/React.createElement(Card,{className:classes.card},/*#__PURE__*/React.createElement(CardContent,{className:classes.content},/*#__PURE__*/React.createElement(Avatar,{alt:userHandle,src:userImage}),deleteButton,/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",component:Link,to:\"/users/\".concat(userHandle),color:\"primary\"},userHandle),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\"},dayjs(createDate).fromNow())),/*#__PURE__*/React.createElement(CardMedia,{className:classes.media,image:plantImg,title:plantName}),/*#__PURE__*/React.createElement(CardContent,{className:classes.content},/*#__PURE__*/React.createElement(Typography,{variant:\"h5\"},plantName),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\"},caption),/*#__PURE__*/React.createElement(LikeButton,{plantId:plantId}),/*#__PURE__*/React.createElement(\"span\",{className:classes.collab},likeCount,\" Likes\"),/*#__PURE__*/React.createElement(MyButton,{tip:\"Comments\"},/*#__PURE__*/React.createElement(ChatIcon,{color:\"primary\"})),/*#__PURE__*/React.createElement(\"span\",{className:classes.collab},commentCount,\" Comments\"),/*#__PURE__*/React.createElement(PlantDialog,{plantId:plantId,userHandle:userHandle,openDialog:this.props.openDialog})));}}]);return Plant;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user};};export default connect(mapStateToProps)(withStyles(styles)(Plant));","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/components/plant/Plant.js"],"names":["React","Component","withStyles","Link","dayjs","relativeTime","MyButton","DeletePlant","PlantDialog","LikeButton","Card","CardMedia","CardContent","Avatar","Typography","lightGreen","ChatIcon","connect","styles","card","position","marginBottom","content","padding","objectFit","minWidth","media","maxWidth","height","paddingTop","avatar","backgroundColor","collab","fontSize","Plant","extend","props","classes","plant","caption","createDate","userImage","userHandle","plantId","plantName","plantImg","likeCount","commentCount","user","authenticated","handle","credentials","deleteButton","fromNow","openDialog","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../../util/MyButton';\nimport DeletePlant from './DeletePlant';\nimport PlantDialog from './PlantDialog';\nimport LikeButton from './LikeButton';\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { lightGreen } from '@material-ui/core/colors';\n\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n\n\n// Redux stuff\nimport { connect } from 'react-redux';\n\n\n\nconst styles = {\n    card: {\n        position: 'relative',\n        marginBottom: 20,\n    },\n    content: {\n        padding: 20,\n        objectFit: 'cover',\n        minWidth: 400,\n    },\n    media: {\n        maxWidth: '100%',\n        height: 300,\n        paddingTop: '0%', // 16:9\n    },\n    avatar: {\n        backgroundColor: lightGreen[500],\n    },\n    collab: {\n        fontSize: 13\n    }\n}\n\nclass Plant extends Component {\n    \n    render() {\n        dayjs.extend(relativeTime)\n        const { \n                classes, \n                plant : { \n                    caption, \n                    createDate, \n                    userImage, \n                    userHandle, \n                    plantId, \n                    plantName, \n                    plantImg, \n                    likeCount, \n                    commentCount \n                },\n                user: {\n                    authenticated, credentials: { handle } // TO DO replace with { handle, role }\n                } \n            } = this.props;\n        \n        const deleteButton = \n        authenticated && userHandle === handle ? ( // TODO include OR for role = moderator\n            <DeletePlant plantId={plantId} />\n        ) : null;\n        return (\n            <Card className={classes.card}>\n                <CardContent className={classes.content}>\n                    <Avatar alt={userHandle} src={userImage} />\n                    {deleteButton}\n                    <Typography\n                         variant=\"body2\" \n                         component={Link} \n                         to={`/users/${userHandle}`} \n                         color=\"primary\">{userHandle}\n                    </Typography>\n                    \n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{dayjs(createDate).fromNow()}</Typography>\n                </CardContent>\n                <CardMedia className={classes.media} image={plantImg} title={plantName} />\n                \n                <CardContent className={classes.content}>\n                    \n                    <Typography variant=\"h5\">{plantName}</Typography>\n                    \n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{caption}</Typography>\n\n                    <LikeButton plantId={plantId}/>\n                    <span className={classes.collab}>{likeCount} Likes</span>\n                    <MyButton tip=\"Comments\">\n                        <ChatIcon color=\"primary\"/>\n                    </MyButton>\n                    <span className={classes.collab}>{commentCount} Comments</span>\n                    <PlantDialog plantId={plantId} userHandle={userHandle} openDialog={this.props.openDialog}/>\n                </CardContent>\n\n            </Card>\n        );\n    }\n}\n\nPlant.propTypes = {\n    user: PropTypes.object.isRequired,\n    plant: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    openDialog: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    user: state.user\n})\n\n\nexport default connect(\n    mapStateToProps\n    )(withStyles(styles)(Plant));\n"]},"metadata":{},"sourceType":"module"}