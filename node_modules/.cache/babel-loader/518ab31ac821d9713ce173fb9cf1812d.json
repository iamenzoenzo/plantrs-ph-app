{"ast":null,"code":"import _classCallCheck from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/components/DeletePlant.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton'; // MUI stuff\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions'; // Icons\n\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { deletePlant } from '../redux/actions/dataActions';\nvar styles = {\n  deleteButton: {\n    position: 'absolute',\n    left: '90%',\n    top: '2%'\n  }\n};\n\nvar DeletePlant = /*#__PURE__*/function (_Component) {\n  _inherits(DeletePlant, _Component);\n\n  function DeletePlant() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeletePlant);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeletePlant)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.deletePlant = function () {\n      _this.props.deletePlant(_this.props.plantId);\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DeletePlant, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MyButton, {\n        tip: \"Delete Plant\",\n        onClick: this.handleOpen,\n        btnClassName: classes.deleteButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutline, {\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"Are you sure you want to delete this plant?\"), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Note that this action is irreversible.\"), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.deletePlant,\n        color: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, \"Delete\"))));\n    }\n  }]);\n\n  return DeletePlant;\n}(Component);\n\nDeletePlant.propTypes = {\n  deletePlant: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  plantId: PropTypes.string.isRequired\n};\nexport default connect(null, {\n  deletePlant: deletePlant\n})(withStyles(styles)(DeletePlant));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/components/DeletePlant.js"],"names":["React","Component","Fragment","withStyles","PropTypes","MyButton","Button","Dialog","DialogTitle","DialogContent","DialogActions","DeleteOutline","connect","deletePlant","styles","deleteButton","position","left","top","DeletePlant","state","open","handleOpen","setState","handleClose","props","plantId","classes","propTypes","func","isRequired","object","string"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\n\n// MUI stuff\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\n// Icons\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { deletePlant } from '../redux/actions/dataActions';\n\nconst styles = {\n    deleteButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '2%'\n    }\n}\n\nclass DeletePlant extends Component {\n    state = {\n        open: false\n    };\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n    deletePlant = () => {\n        this.props.deletePlant(this.props.plantId)\n        this.setState({ open: false });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Delete Plant\"\n                onClick={this.handleOpen}\n                btnClassName={classes.deleteButton}\n                >\n                    <DeleteOutline color=\"secondary\"/>\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                    >\n                        <DialogTitle>Are you sure you want to delete this plant?</DialogTitle>\n                        <DialogContent>Note that this action is irreversible.</DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.deletePlant} color=\"secondary\">\n                                Delete\n                            </Button>\n                        </DialogActions>\n\n                    </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nDeletePlant.propTypes = {\n    deletePlant: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    plantId: PropTypes.string.isRequired\n}\n\nexport default connect(null, { deletePlant })(withStyles(styles)(DeletePlant));\n"]},"metadata":{},"sourceType":"module"}