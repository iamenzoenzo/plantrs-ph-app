{"ast":null,"code":"import _toConsumableArray from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_PLANT, UNLIKE_PLANT } from '../types';\nvar initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return _objectSpread({}, state, {\n        authenticated: true\n      });\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return _objectSpread({\n        authenticated: true,\n        loading: false\n      }, action.payload);\n\n    case LOADING_USER:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case LIKE_PLANT:\n      return _objectSpread({}, state, {\n        likes: [].concat(_toConsumableArray(state.likes), [{\n          userHandle: state.credentials.handle,\n          plantId: action.payload.plantId\n        }])\n      });\n\n    case UNLIKE_PLANT:\n      return _objectSpread({}, state, {\n        likes: state.likes.filter(function (like) {\n          return like.plantId !== action.payload.plantId;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","LIKE_PLANT","UNLIKE_PLANT","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","plantId","filter","like"],"mappings":";;AAAA,SACIA,QADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,EAKIC,UALJ,EAMIC,YANJ,QAOO,UAPP;AASA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,aAAa,EAAE;AALE,CAArB;AAQA,eAAe,YAAsC;AAAA,MAA7BC,KAA6B,uEAArBN,YAAqB;AAAA,MAAPO,MAAO;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,iBAAL;AACI,+BACOW,KADP;AAEIL,QAAAA,aAAa,EAAE;AAFnB;;AAIJ,SAAKL,mBAAL;AACI,aAAOI,YAAP;;AACJ,SAAKN,QAAL;AACI;AACIO,QAAAA,aAAa,EAAE,IADnB;AAEIC,QAAAA,OAAO,EAAE;AAFb,SAGOK,MAAM,CAACE,OAHd;;AAKJ,SAAKZ,YAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKJ,UAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,KAAK,+BACEE,KAAK,CAACF,KADR,IAED;AACIM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MADlC;AAEIC,UAAAA,OAAO,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAF5B,SAFC;AAFT;;AAUJ,SAAKb,YAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CACH,UAACC,IAAD;AAAA,iBAAUA,IAAI,CAACF,OAAL,KAAiBL,MAAM,CAACE,OAAP,CAAeG,OAA1C;AAAA,SADG;AAFX;;AAMJ;AACI,aAAON,KAAP;AAtCR;AAwCH","sourcesContent":["import { \n    SET_USER, \n    SET_AUTHENTICATED, \n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_PLANT, \n    UNLIKE_PLANT\n} from '../types';\n\nconst initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n};\n\nexport default function(state = initialState, action){\n    switch(action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                authenticated: true,\n                loading: false,\n                ...action.payload\n            };\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            };\n        case LIKE_PLANT:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes,\n                    {\n                        userHandle: state.credentials.handle,\n                        plantId: action.payload.plantId\n                    }\n                ]\n            };\n        case UNLIKE_PLANT:\n            return {\n                ...state,\n                likes: state.likes.filter(\n                    (like) => like.plantId !== action.payload.plantId\n                )\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}