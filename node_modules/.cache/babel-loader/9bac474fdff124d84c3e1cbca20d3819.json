{"ast":null,"code":"import { SET_PLANTS, LOADING_DATA, LIKE_PLANT, UNLIKE_PLANT } from '../types';\nimport axios from 'axios'; // Get all plants\n\nexport const getPlants = () => dispatch => {\n  dispatch({\n    type: LOADING_DATA\n  });\n  axios.get('/plants').then(res => {\n    dispatch({\n      type: SET_PLANTS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: SET_PLANTS,\n      payload: []\n    });\n  });\n}; // Like a plant\n\nexport const likePlant = plantId => dispatch => {\n  axios.get(`/plant/${plantId}/like`).then(res => {\n    dispatch({\n      type: LIKE_PLANT,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n}; // Unlike a plant\n\nexport const unlikePlant = plantId => dispatch => {\n  axios.get(`/plant/${plantId}/unlike`).then(res => {\n    dispatch({\n      type: UNLIKE_PLANT,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/redux/actions/dataActions.js"],"names":["SET_PLANTS","LOADING_DATA","LIKE_PLANT","UNLIKE_PLANT","axios","getPlants","dispatch","type","get","then","res","payload","data","catch","err","likePlant","plantId","console","log","unlikePlant"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+CC,YAA/C,QAAmE,UAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAMC,QAAQ,IAAI;AACvCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAG,EAAAA,KAAK,CAACI,GAAN,CAAU,SAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,UADD;AAELW,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GANL,EAOKC,KAPL,CAOWC,GAAG,IAAI;AACVR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,UADD;AAELW,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GAZL;AAaH,CAfM,C,CAiBP;;AACA,OAAO,MAAMI,SAAS,GAAIC,OAAD,IAAaV,QAAQ,IAAI;AAC9CF,EAAAA,KAAK,CACAI,GADL,CACU,UAASQ,OAAQ,OAD3B,EAEKP,IAFL,CAEUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,UADD;AAELS,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GAPL,EAQKC,KARL,CAQYC,GAAD,IAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CARpB;AASH,CAVM,C,CAWP;;AACA,OAAO,MAAMK,WAAW,GAAIH,OAAD,IAAaV,QAAQ,IAAI;AAChDF,EAAAA,KAAK,CACAI,GADL,CACU,UAASQ,OAAQ,SAD3B,EAEKP,IAFL,CAEUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,YADD;AAELQ,MAAAA,OAAO,EAAED,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GAPL,EAQKC,KARL,CAQYC,GAAD,IAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CARpB;AASH,CAVM","sourcesContent":["import { SET_PLANTS, LOADING_DATA, LIKE_PLANT, UNLIKE_PLANT } from '../types';\nimport axios from 'axios';\n\n// Get all plants\nexport const getPlants = () => dispatch => {\n    dispatch({ type: LOADING_DATA });\n    axios.get('/plants')\n        .then(res => {\n            dispatch({\n                type: SET_PLANTS,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_PLANTS,\n                payload: []\n            })\n        })\n}\n\n// Like a plant\nexport const likePlant = (plantId) => dispatch => {\n    axios\n        .get(`/plant/${plantId}/like`)\n        .then(res => {\n            dispatch({\n                type: LIKE_PLANT,\n                payload: res.data\n            })\n        })\n        .catch((err) => console.log(err));\n}\n// Unlike a plant\nexport const unlikePlant = (plantId) => dispatch => {\n    axios\n        .get(`/plant/${plantId}/unlike`)\n        .then(res => {\n            dispatch({\n                type: UNLIKE_PLANT,\n                payload: res.data\n            })\n        })\n        .catch((err) => console.log(err));\n}"]},"metadata":{},"sourceType":"module"}