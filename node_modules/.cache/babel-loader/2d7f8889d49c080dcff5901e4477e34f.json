{"ast":null,"code":"var _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/pages/user.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Plant from '../components/plant/Plant';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\nclass user extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile: null\n    };\n  }\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    this.props.getUserData(handle);\n    axios.get(`/user/${handle}`).then(res => {\n      this.setState({\n        profile: res.data.user\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const {\n      plants,\n      loading\n    } = this.props.data;\n    const plantsMarkup = loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Loading plants...\") : plants === null ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"No plants for this user...\") : plants.map(plant => /*#__PURE__*/React.createElement(Plant, {\n      key: plant.plantId,\n      plant: plant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, plantsMarkup), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, this.state.profile === null ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Loading profile...\") : /*#__PURE__*/React.createElement(StaticProfile, {\n      profile: this.state.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }\n    })));\n  }\n\n}\n\nuser.propTypes = {\n  getUserData: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(user);","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/pages/user.js"],"names":["React","Component","PropTypes","axios","Plant","StaticProfile","Grid","connect","getUserData","user","state","profile","componentDidMount","handle","props","match","params","get","then","res","setState","data","catch","err","console","log","render","plants","loading","plantsMarkup","map","plant","plantId","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Plant from '../components/plant/Plant';\nimport StaticProfile from '../components/profile/StaticProfile';\nimport Grid from '@material-ui/core/Grid';\n\nimport { connect } from 'react-redux';\nimport { getUserData } from '../redux/actions/dataActions';\n\n\nclass user extends Component {\n    state = {\n        profile: null\n    }\n\n    componentDidMount(){\n        const handle = this.props.match.params.handle;\n        this.props.getUserData(handle);\n        axios.get(`/user/${handle}`)\n            .then(res => {\n                this.setState({\n                    profile: res.data.user\n                })\n            })\n            .catch(err => console.log(err));\n    }\n    render() {\n        const { plants, loading } = this.props.data;\n\n        const plantsMarkup = loading ? (\n            <p>Loading plants...</p>\n        ) : plants === null ? (\n            <p>No plants for this user...</p>\n        ) : (\n            plants.map(plant => <Plant key={plant.plantId} plant={plant}/>)\n        )\n\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={8} xs={12}>\n                    {plantsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    {this.state.profile === null ? (\n                        <p>Loading profile...</p>\n                    ) : (<StaticProfile profile={this.state.profile} />)}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nuser.propTypes = {\n    getUserData: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, {getUserData})(user);\n"]},"metadata":{},"sourceType":"module"}