{"ast":null,"code":"var _jsxFileName = \"/Volumes/External/MasterGithub/plantrs-ph-app/src/util/PlantSkeleton.js\";\nimport React, { Fragment } from 'react';\nimport NoImg from '../images/no-img.png';\nimport NoPlantImg from '../images/no-plant-img.png';\nimport PropTypes from 'prop-types'; // MUI\n\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({ ...theme.spreadThis,\n  card: {\n    position: 'relative',\n    marginBottom: 20\n  },\n  content: {\n    padding: 20,\n    objectFit: 'cover',\n    minWidth: 400\n  },\n  media: {\n    maxWidth: '100%',\n    height: 300,\n    paddingTop: '0%' // 16:9\n\n  },\n  avatar: {\n    backgroundColor: 'rgba(0,0,0, 0.3)'\n  },\n  cardContent: {\n    width: '100%',\n    flexDirection: 'column',\n    padding: 25\n  },\n  handle: {\n    width: 60,\n    height: 18,\n    backgroundColor: theme.palette.primary.main,\n    marginBottom: 7\n  },\n  date: {\n    height: 14,\n    width: 100,\n    backgroundColor: 'rgba(0,0,0, 0.3)',\n    marginBottom: 10\n  },\n  fullLine: {\n    height: 15,\n    width: '90%',\n    backgroundColor: 'rgba(0,0,0, 0.4)',\n    marginBottom: 10\n  },\n  halfLine: {\n    height: 15,\n    width: '50%',\n    backgroundColor: 'rgba(0,0,0, 0.3)',\n    marginBottom: 10\n  }\n});\n\nconst PlantSkeleton = props => {\n  const {\n    classes\n  } = props;\n  const content = Array.from({\n    length: 5\n  }).map((item, index) => /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"user\",\n    src: NoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.handle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: NoPlantImg,\n    title: \"Plant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fullLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fullLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.halfLine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }, content);\n};\n\n_c = PlantSkeleton;\nPlantSkeleton.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PlantSkeleton);\n\nvar _c;\n\n$RefreshReg$(_c, \"PlantSkeleton\");","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/util/PlantSkeleton.js"],"names":["React","Fragment","NoImg","NoPlantImg","PropTypes","Card","CardMedia","CardContent","Avatar","withStyles","styles","theme","spreadThis","card","position","marginBottom","content","padding","objectFit","minWidth","media","maxWidth","height","paddingTop","avatar","backgroundColor","cardContent","width","flexDirection","handle","palette","primary","main","date","fullLine","halfLine","PlantSkeleton","props","classes","Array","from","length","map","item","index","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport NoImg from '../images/no-img.png';\nimport NoPlantImg from '../images/no-plant-img.png';\nimport PropTypes from 'prop-types';\n// MUI\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nconst styles = (theme) => ({\n    ...theme.spreadThis,\n    card: {\n        position: 'relative',\n        marginBottom: 20,\n    },\n    content: {\n        padding: 20,\n        objectFit: 'cover',\n        minWidth: 400,\n    },\n    media: {\n        maxWidth: '100%',\n        height: 300,\n        paddingTop: '0%', // 16:9\n    },\n    avatar: {\n        backgroundColor: 'rgba(0,0,0, 0.3)',\n    },\n    cardContent: {\n        width: '100%',\n        flexDirection: 'column',\n        padding: 25\n    },\n    handle: {\n        width: 60,\n        height: 18,\n        backgroundColor: theme.palette.primary.main,\n        marginBottom: 7\n    },\n    date: {\n        height: 14,\n        width: 100,\n        backgroundColor: 'rgba(0,0,0, 0.3)',\n        marginBottom: 10\n    },\n    fullLine: {\n        height: 15,\n        width: '90%',\n        backgroundColor: 'rgba(0,0,0, 0.4)',\n        marginBottom: 10\n    },\n    halfLine: {\n        height: 15,\n        width: '50%',\n        backgroundColor: 'rgba(0,0,0, 0.3)',\n        marginBottom: 10\n    }\n});\n\nconst PlantSkeleton = (props) => {\n    const { classes } = props;\n\n    const content = Array.from({ length: 5}).map((item, index) => (\n        <Card className={classes.card} key={index}>\n            <CardContent className={classes.content}>\n                <Avatar alt=\"user\" src={NoImg} />\n                <div className={classes.handle}/>\n                <div className={classes.date}/>\n            </CardContent>\n            <CardMedia className={classes.media} image={NoPlantImg} title=\"Plant\" />\n\n            <CardContent className={classes.cardContent}>\n                \n                <div className={classes.fullLine}/>\n                <div className={classes.fullLine}/>\n                <div className={classes.halfLine}/>\n\n            </CardContent>\n        </Card>\n    ))\n\n    return <Fragment>{content}</Fragment>\n};\n\nPlantSkeleton.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(PlantSkeleton);"]},"metadata":{},"sourceType":"module"}