{"ast":null,"code":"import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\nimport axios from 'axios';\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch({\n    type: LOADING_UI\n  });\n  axios.post('/login', userData).then(res => {\n    const FBIdToken = `Bearer ${res.data.token}`;\n    localStorage.setItem('FBIdToken', FBIdToken);\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\n    dispatch(getUserData());\n    dispatch({\n      type: CLEAR_ERRORS\n    }); // clears the error before it redirects\n\n    history.push('/'); // redirects to homepage upon successful login\n  }).catch(err => {\n    dispatch({\n      type: SET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getUserData = () => dispatch => {\n  axios.get('/user').then(res => {\n    dispatch({\n      type: SET_USER,\n      payload: res.data\n    });\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/redux/actions/userActions.js"],"names":["SET_USER","SET_ERRORS","CLEAR_ERRORS","LOADING_UI","axios","loginUser","userData","history","dispatch","type","post","then","res","FBIdToken","data","token","localStorage","setItem","defaults","headers","common","getUserData","push","catch","err","payload","response","get","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,YAA/B,EAA6CC,UAA7C,QAA+D,UAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwBC,QAAD,IAAc;AAC1DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACAC,EAAAA,KAAK,CAACM,IAAN,CAAW,QAAX,EAAqBJ,QAArB,EACKK,IADL,CACUC,GAAG,IAAI;AACT,UAAMC,SAAS,GAAI,UAASD,GAAG,CAACE,IAAJ,CAASC,KAAM,EAA3C;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCJ,SAAlC;AACAT,IAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDP,SAAjD;AACAL,IAAAA,QAAQ,CAACa,WAAW,EAAZ,CAAR;AACAb,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR,CALS,CAKyB;;AAClCK,IAAAA,OAAO,CAACe,IAAR,CAAa,GAAb,EANS,CAMU;AACtB,GARL,EASKC,KATL,CASWC,GAAG,IAAI;AACVhB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,UADD;AAELwB,MAAAA,OAAO,EAAED,GAAG,CAACE,QAAJ,CAAaZ;AAFjB,KAAD,CAAR;AAIH,GAdL;AAeH,CAjBM;AAmBP,OAAO,MAAMO,WAAW,GAAG,MAAOb,QAAD,IAAc;AAC3CJ,EAAAA,KAAK,CAACuB,GAAN,CAAU,OAAV,EACKhB,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET,QADD;AAELyB,MAAAA,OAAO,EAAEb,GAAG,CAACE;AAFR,KAAD,CAAR;AAIH,GANL,EAOKS,KAPL,CAOWC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYL,GAAZ,CAPlB;AAQH,CATM","sourcesContent":["import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI } from '../types';\nimport axios from 'axios';\n\nexport const loginUser = (userData, history) => (dispatch) => {\n    dispatch({ type: LOADING_UI });\n    axios.post('/login', userData)\n        .then(res => {\n            const FBIdToken = `Bearer ${res.data.token}`;\n            localStorage.setItem('FBIdToken', FBIdToken);\n            axios.defaults.headers.common['Authorization'] = FBIdToken;\n            dispatch(getUserData());\n            dispatch({ type: CLEAR_ERRORS }); // clears the error before it redirects\n            history.push('/'); // redirects to homepage upon successful login\n        })\n        .catch(err => {\n            dispatch({\n                type: SET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}\n\nexport const getUserData = () => (dispatch) => {\n    axios.get('/user')\n        .then(res => {\n            dispatch({\n                type: SET_USER,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err));\n}"]},"metadata":{},"sourceType":"module"}