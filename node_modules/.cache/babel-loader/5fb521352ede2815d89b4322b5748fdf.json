{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/components/EditDetails.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { editUserDetails } from '../redux/actions/userActions'; // MUI stuff\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton'; // Icons\n\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = theme => ({ ...theme.spreadThis,\n  button: {\n    float: 'right'\n  }\n});\n\nclass EditDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bio: '',\n      website: '',\n      location: '',\n      open: false\n    };\n\n    this.mapUserDetailsToState = credentials => {\n      this.setState({\n        bio: credentials.bio ? credentials.bio : '',\n        website: credentials.website ? credentials.website : '',\n        location: credentials.location ? credentials.location : ''\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.mapUserDetailsToState(this.props.credentials);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const userDetails = {\n        bio: this.state.bio,\n        website: this.state.website,\n        location: this.state.location\n      };\n      this.props.editUserDetails(userDetails);\n      this.handleClose();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      credentials\n    } = this.props;\n    this.mapUserDetailsToState(credentials);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Edit details\",\n        placement: \"top\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: this.handleOpen,\n          className: classes.button,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Edit your details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              name: \"bio\",\n              type: \"text\",\n              label: \"Bio\",\n              multiline: true,\n              rows: \"3\",\n              placeholder: \"A short bio about yourself\",\n              className: classes.textField,\n              value: this.state.bio,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"website\",\n              type: \"text\",\n              label: \"Website\",\n              placeholder: \"Your personal/professional website\",\n              className: classes.textField,\n              value: this.state.website,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"location\",\n              type: \"text\",\n              label: \"Location\",\n              placeholder: \"Where you live\",\n              className: classes.textField,\n              value: this.state.location,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleClose,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSubmit,\n            color: \"primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nEditDetails.propTypes = {\n  editUserDetails: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  credentials: state.user.credentials\n});\n\nexport default connect(mapStateToProps, {\n  editUserDetails\n})(withStyles(styles)(EditDetails));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/components/EditDetails.js"],"names":["React","Component","Fragment","PropTypes","withStyles","connect","editUserDetails","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Tooltip","IconButton","EditIcon","styles","theme","spreadThis","button","float","EditDetails","state","bio","website","location","open","mapUserDetailsToState","credentials","setState","handleOpen","props","handleClose","handleChange","event","target","name","value","handleSubmit","userDetails","componentDidMount","render","classes","textField","propTypes","func","isRequired","object","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { editUserDetails } from '../redux/actions/userActions';\n// MUI stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n// Icons\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis,\n    button: {\n        float: 'right'\n    }\n})\n\nclass EditDetails extends Component {\n    state = {\n        bio: '',\n        website: '',\n        location: '',\n        open: false\n    };\n    mapUserDetailsToState = (credentials) => {\n        this.setState({\n            bio: credentials.bio ? credentials.bio : '',\n            website: credentials.website ? credentials.website : '',\n            location: credentials.location ? credentials.location : ''\n        });\n    };\n    handleOpen = () => {\n        this.setState({ open: true });\n        this.mapUserDetailsToState(this.props.credentials);\n    };\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n    componentDidMount(){\n        const { credentials } = this.props;\n        this.mapUserDetailsToState(credentials);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    };\n    handleSubmit = () => {\n        const userDetails = {\n            bio: this.state.bio,\n            website: this.state.website,\n            location: this.state.location,\n        };\n        this.props.editUserDetails(userDetails);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <Tooltip title=\"Edit details\" placement=\"top\">\n                    <IconButton onClick={this.handleOpen} className={classes.button}>\n                        <EditIcon color=\"primary\"/>\n                    </IconButton>\n                </Tooltip>\n                <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                fullWidth\n                maxWidth=\"sm\">\n                    <DialogTitle>Edit your details</DialogTitle>\n                    <DialogContent>\n                        <form>\n                            <TextField\n                                name=\"bio\"\n                                type=\"text\"\n                                label=\"Bio\"\n                                multiline\n                                rows=\"3\"\n                                placeholder=\"A short bio about yourself\"\n                                className={classes.textField}\n                                value={this.state.bio}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <TextField\n                                name=\"website\"\n                                type=\"text\"\n                                label=\"Website\"\n                                placeholder=\"Your personal/professional website\"\n                                className={classes.textField}\n                                value={this.state.website}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                            <TextField\n                                name=\"location\"\n                                type=\"text\"\n                                label=\"Location\"\n                                placeholder=\"Where you live\"\n                                className={classes.textField}\n                                value={this.state.location}\n                                onChange={this.handleChange}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        )\n    }\n};\n\nEditDetails.propTypes = {\n    editUserDetails: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    credentials: state.user.credentials\n})\n\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\n"]},"metadata":{},"sourceType":"module"}