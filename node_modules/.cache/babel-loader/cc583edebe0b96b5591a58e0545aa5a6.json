{"ast":null,"code":"import { SET_PLANTS, SET_PLANT, LIKE_PLANT, UNLIKE_PLANT, LOADING_DATA, DELETE_PLANT, POST_PLANT, SUBMIT_COMMENT } from '../types';\nconst initialState = {\n  plants: [],\n  plant: {},\n  loading: false\n};\nexport default function dataReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_PLANTS:\n      return { ...state,\n        plants: action.payload,\n        loading: false\n      };\n\n    case SET_PLANT:\n      return { ...state,\n        plant: action.payload\n      };\n\n    case LIKE_PLANT:\n    case UNLIKE_PLANT:\n      let index = state.plants.findIndex(plant => plant.plantId === action.payload.plantId);\n      state.plants[index] = action.payload;\n\n      if (state.plant.plantId === action.payload.plantId) {\n        state.plant = action.payload;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_PLANT:\n      index = state.plants.findIndex(plant => plant.plantId === action.payload);\n      state.plants.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_PLANT:\n      return { ...state,\n        plants: [action.payload, ...state.plants]\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        plant: { ...state.plant,\n          comments: [action.payload, ...state.plant.comments]\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/redux/reducers/dataReducer.js"],"names":["SET_PLANTS","SET_PLANT","LIKE_PLANT","UNLIKE_PLANT","LOADING_DATA","DELETE_PLANT","POST_PLANT","SUBMIT_COMMENT","initialState","plants","plant","loading","dataReducer","state","action","type","payload","index","findIndex","plantId","splice","comments"],"mappings":"AAAA,SACIA,UADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,YAJJ,EAKIC,YALJ,EAMIC,YANJ,EAOIC,UAPJ,EAQIC,cARJ,QASO,UATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGL,YAA7B,EAA2CM,MAA3C,EAAkD;AAC7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKX,UAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHJ,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAFZ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKV,SAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKd,UAAL;AACA,SAAKC,YAAL;AACI,UAAIc,KAAK,GAAGJ,KAAK,CAACJ,MAAN,CAAaS,SAAb,CAAwBR,KAAD,IAAWA,KAAK,CAACS,OAAN,KAAkBL,MAAM,CAACE,OAAP,CAAeG,OAAnE,CAAZ;AACAN,MAAAA,KAAK,CAACJ,MAAN,CAAaQ,KAAb,IAAsBH,MAAM,CAACE,OAA7B;;AACA,UAAIH,KAAK,CAACH,KAAN,CAAYS,OAAZ,KAAwBL,MAAM,CAACE,OAAP,CAAeG,OAA3C,EAAoD;AAChDN,QAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAArB;AACH;;AACD,aAAO,EACH,GAAGH;AADA,OAAP;;AAGJ,SAAKR,YAAL;AACIY,MAAAA,KAAK,GAAGJ,KAAK,CAACJ,MAAN,CAAaS,SAAb,CAAwBR,KAAD,IAAWA,KAAK,CAACS,OAAN,KAAkBL,MAAM,CAACE,OAA3D,CAAR;AACAH,MAAAA,KAAK,CAACJ,MAAN,CAAaW,MAAb,CAAoBH,KAApB,EAA2B,CAA3B;AACA,aAAO,EACH,GAAGJ;AADA,OAAP;;AAGJ,SAAKP,UAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,MAAM,EAAE,CACJK,MAAM,CAACE,OADH,EAEJ,GAAGH,KAAK,CAACJ,MAFL;AAFL,OAAP;;AAOJ,SAAKF,cAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,KAAK,EAAE,EACH,GAAGG,KAAK,CAACH,KADN;AAEHW,UAAAA,QAAQ,EAAE,CAACP,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,KAAN,CAAYW,QAAhC;AAFP;AAFJ,OAAP;;AAOJ;AACI,aAAOR,KAAP;AAlDR;AAoDH","sourcesContent":["import { \n    SET_PLANTS,\n    SET_PLANT, \n    LIKE_PLANT, \n    UNLIKE_PLANT, \n    LOADING_DATA, \n    DELETE_PLANT, \n    POST_PLANT,\n    SUBMIT_COMMENT \n} from '../types';\n\nconst initialState = {\n    plants: [],\n    plant: {},\n    loading: false\n};\n\nexport default function dataReducer(state = initialState, action){\n    switch(action.type){\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_PLANTS:\n            return {\n                ...state,\n                plants: action.payload,\n                loading: false\n            };\n        case SET_PLANT:\n            return {\n                ...state,\n                plant: action.payload\n            };\n        case LIKE_PLANT:\n        case UNLIKE_PLANT:\n            let index = state.plants.findIndex((plant) => plant.plantId === action.payload.plantId);\n            state.plants[index] = action.payload;\n            if (state.plant.plantId === action.payload.plantId) {\n                state.plant = action.payload;\n            }\n            return {\n                ...state\n            };\n        case DELETE_PLANT:\n            index = state.plants.findIndex((plant) => plant.plantId === action.payload);\n            state.plants.splice(index, 1);\n            return {\n                ...state\n            };\n        case POST_PLANT:\n            return {\n                ...state,\n                plants: [\n                    action.payload,\n                    ...state.plants\n                ]\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                plant: {\n                    ...state.plant,\n                    comments: [action.payload, ...state.plant.comments]\n                }\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}