{"ast":null,"code":"import _classCallCheck from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Grid from'@material-ui/core/Grid';import Plant from'../components/plant/Plant';import Profile from'../components/profile/Profile';import PlantSkeleton from'../util/PlantSkeleton';import{connect}from'react-redux';import{getPlants}from'../redux/actions/dataActions';var home=/*#__PURE__*/function(_Component){_inherits(home,_Component);var _super=_createSuper(home);function home(){_classCallCheck(this,home);return _super.apply(this,arguments);}_createClass(home,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getPlants();}},{key:\"render\",value:function render(){var _this$props$data=this.props.data,plants=_this$props$data.plants,loading=_this$props$data.loading;var recentPlantsMarkup=!loading?plants.map(function(plant){return/*#__PURE__*/React.createElement(Plant,{key:plant.plantId,plant:plant});}):/*#__PURE__*/React.createElement(PlantSkeleton,null);return/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true,sm:4,xs:12},/*#__PURE__*/React.createElement(Profile,null)),/*#__PURE__*/React.createElement(Grid,{item:true,sm:8,xs:12},recentPlantsMarkup));}}]);return home;}(Component);var mapStateToProps=function mapStateToProps(state){return{data:state.data};};export default connect(mapStateToProps,{getPlants:getPlants})(home);","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/pages/home.js"],"names":["React","Component","Grid","Plant","Profile","PlantSkeleton","connect","getPlants","home","props","data","plants","loading","recentPlantsMarkup","map","plant","plantId","mapStateToProps","state"],"mappings":"goBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAGA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CAGA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,8BAA1B,C,GAEMC,CAAAA,I,0PACiB,CACf,KAAKC,KAAL,CAAWF,SAAX,GACH,C,uCACQ,sBACuB,KAAKE,KAAL,CAAWC,IADlC,CACGC,MADH,kBACGA,MADH,CACWC,OADX,kBACWA,OADX,CAEL,GAAIC,CAAAA,kBAAkB,CAAG,CAACD,OAAD,CACrBD,MAAM,CAACG,GAAP,CAAW,SAACC,KAAD,qBAAW,oBAAC,KAAD,EAAO,GAAG,CAAEA,KAAK,CAACC,OAAlB,CAA2B,KAAK,CAAED,KAAlC,EAAX,EAAX,CADqB,cAGrB,oBAAC,aAAD,MAHJ,CAKA,mBACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,EAAE,CAAE,EAAtB,eACI,oBAAC,OAAD,MADJ,CADJ,cAII,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,EAAE,CAAE,EAAtB,EACKF,kBADL,CAJJ,CADJ,CAWH,C,kBAtBcZ,S,EA8BnB,GAAMgB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BR,IAAI,CAAEQ,KAAK,CAACR,IADkB,CAAL,EAA7B,CAIA,cAAeJ,CAAAA,OAAO,CAACW,eAAD,CAAkB,CAAEV,SAAS,CAATA,SAAF,CAAlB,CAAP,CAAwCC,IAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nimport Plant from '../components/plant/Plant';\nimport Profile from '../components/profile/Profile';\nimport PlantSkeleton from '../util/PlantSkeleton';\n\n\nimport { connect } from 'react-redux';\nimport { getPlants } from '../redux/actions/dataActions';\n\nclass home extends Component {\n    componentDidMount(){\n        this.props.getPlants();\n    }\n    render() {\n        const { plants, loading } = this.props.data;\n        let recentPlantsMarkup = !loading ? (\n            plants.map((plant) => <Plant key={plant.plantId} plant={plant} />)\n        ) : (\n            <PlantSkeleton/>\n        );\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n                <Grid item sm={8} xs={12}>\n                    {recentPlantsMarkup}\n                    \n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nhome.propTypes = {\n    getPlants: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, { getPlants })(home);\n"]},"metadata":{},"sourceType":"module"}