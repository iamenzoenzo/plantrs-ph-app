{"ast":null,"code":"var _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/pages/home.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Plant from '../components/plant/Plant';\nimport Profile from '../components/profile/Profile';\nimport PlantSkeleton from '../util/PlantSkeleton';\nimport { connect } from 'react-redux';\nimport { getPlants } from '../redux/actions/dataActions';\n\nclass home extends Component {\n  componentDidMount() {\n    this.props.getPlants();\n  }\n\n  render() {\n    const {\n      plants,\n      loading\n    } = this.props.data;\n    let recentPlantsMarkup = !loading ? plants.map(plant => /*#__PURE__*/React.createElement(Plant, {\n      key: plant.plantId,\n      plant: plant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 35\n      }\n    })) : /*#__PURE__*/React.createElement(PlantSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Profile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, recentPlantsMarkup));\n  }\n\n}\n\nhome.propTypes = {\n  getPlants: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getPlants\n})(home);","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/pages/home.js"],"names":["React","Component","Grid","PropTypes","Plant","Profile","PlantSkeleton","connect","getPlants","home","componentDidMount","props","render","plants","loading","data","recentPlantsMarkup","map","plant","plantId","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AACzBS,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,SAAX;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAsB,KAAKH,KAAL,CAAWI,IAAvC;AACA,QAAIC,kBAAkB,GAAG,CAACF,OAAD,GACrBD,MAAM,CAACI,GAAP,CAAYC,KAAD,iBAAW,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,OAAlB;AAA2B,MAAA,KAAK,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADqB,gBAGrB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAKA,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,kBADL,CAJJ,CADJ;AAWH;;AAtBwB;;AAyB7BP,IAAI,CAACW,SAAL,GAAiB;AACbZ,EAAAA,SAAS,EAAEL,SAAS,CAACkB,IAAV,CAAeC,UADb;AAEbP,EAAAA,IAAI,EAAEZ,SAAS,CAACoB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADkB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,IAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nimport Plant from '../components/plant/Plant';\nimport Profile from '../components/profile/Profile';\nimport PlantSkeleton from '../util/PlantSkeleton';\n\n\nimport { connect } from 'react-redux';\nimport { getPlants } from '../redux/actions/dataActions';\n\nclass home extends Component {\n    componentDidMount(){\n        this.props.getPlants();\n    }\n    render() {\n        const { plants, loading } = this.props.data;\n        let recentPlantsMarkup = !loading ? (\n            plants.map((plant) => <Plant key={plant.plantId} plant={plant} />)\n        ) : (\n            <PlantSkeleton/>\n        );\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n                <Grid item sm={8} xs={12}>\n                    {recentPlantsMarkup}\n                    \n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nhome.propTypes = {\n    getPlants: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, { getPlants })(home);\n"]},"metadata":{},"sourceType":"module"}