{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/pages/login.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom'; // Material UIs\n\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux stuffs\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({ ...theme.spreadThis\n});\n\nclass login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n  /* static getDerivedStateFromProps(props) {\n      if (props.UI.errors) {\n        return {\n          errors: props.UI.errors\n        }\n      }\n      return null;\n    } */\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: AppLogo,\n            alt: \"plantrses/p\",\n            claslogoplantrslogoe: classes.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            className: classes.pageTitle,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              label: \"Email\",\n              className: classes.textField,\n              helperText: errors.email // displays the error below the email field\n              ,\n              error: errors.email ? true : false // checks whether there's error or not\n              ,\n              value: this.state.email,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              label: \"Password\",\n              className: classes.textField,\n              helperText: errors.password // displays the error below the password field\n              ,\n              error: errors.password ? true : false // checks whether there's error or not\n              ,\n              value: this.state.password,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.customError,\n              children: errors.general\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              disabled: loading,\n              children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 30,\n                className: classes.progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Don't have an account yet? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 55\n              }, this), \" Ceate an account \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  loginUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/pages/login.js"],"names":["React","Component","withStyles","PropTypes","AppLogo","Link","Card","Grid","Typography","TextField","Button","CircularProgress","connect","loginUser","styles","theme","spreadThis","login","constructor","handleSubmit","event","preventDefault","userData","email","state","password","props","history","handleChange","setState","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","classes","loading","form","card","logo","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","func","user","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom';\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux stuffs\nimport { connect } from 'react-redux';\nimport { loginUser } from '../redux/actions/userActions';\n\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\nclass login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n    }\n    /* static getDerivedStateFromProps(props) {\n        if (props.UI.errors) {\n          return {\n            errors: props.UI.errors\n          }\n        }\n        return null;\n      } */\n      componentWillReceiveProps(nextProps) {\n        if (nextProps.UI.errors) {\n          this.setState({ errors: nextProps.UI.errors });\n        }\n      }\n      handleSubmit = (event) => {\n        event.preventDefault();\n        const userData = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.loginUser(userData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors } = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                <Card className={classes.card}>\n                <img src={AppLogo} alt=\"plantrses/p\" claslogoplantrslogoe={classes.logo} />\n                <Typography variant=\"h3\" className={classes.pageTitle}>\n                    Login\n                </Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField \n                        id=\"email\" \n                        name=\"email\" \n                        type=\"email\" \n                        label=\"Email\" \n                        className={classes.textField} \n                        helperText={errors.email} // displays the error below the email field\n                        error={errors.email ? true : false} // checks whether there's error or not\n                        value={this.state.email} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"password\" \n                        name=\"password\" \n                        type=\"password\" \n                        label=\"Password\" \n                        className={classes.textField} \n                        helperText={errors.password} // displays the error below the password field\n                        error={errors.password ? true : false} // checks whether there's error or not\n                        value={this.state.password} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button \n                        type=\"submit\" \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={classes.button}\n                        disabled={loading}\n                    >\n                        Login\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress}/>\n                        )}\n                    </Button>\n                    <br/>\n                    <small>Don't have an account yet? <br/> Ceate an account <Link to=\"/signup\">here</Link></small>\n                </form>\n                </Card>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nlogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n    loginUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n});\n\nconst mapActionsToProps = {\n    loginUser\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(login));\n"]},"metadata":{},"sourceType":"module"}