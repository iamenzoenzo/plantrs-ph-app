{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/pages/signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom'; // Material UIs\n\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({ ...theme.spreadThis\n});\n\nclass signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      this.props.signupUser(newUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: AppLogo,\n            alt: \"plantrses/p\",\n            claslogoplantrslogoe: classes.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            className: classes.pageTitle,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              label: \"Email\",\n              className: classes.textField,\n              helperText: errors.email // displays the error below the email field\n              ,\n              error: errors.email ? true : false // checks whether there's error or not\n              ,\n              value: this.state.email,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              label: \"Password\",\n              className: classes.textField,\n              helperText: errors.password // displays the error below the password field\n              ,\n              error: errors.password ? true : false // checks whether there's error or not\n              ,\n              value: this.state.password,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              label: \"Confirm Password\",\n              className: classes.textField,\n              helperText: errors.confirmPassword // displays the error below the confirmPassword field\n              ,\n              error: errors.confirmPassword ? true : false // checks whether there's error or not\n              ,\n              value: this.state.confirmPassword,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"handle\",\n              name: \"handle\",\n              type: \"text\",\n              label: \"Handle\",\n              className: classes.textField,\n              helperText: errors.handle // displays the error below the handle field\n              ,\n              error: errors.handle ? true : false // checks whether there's error or not\n              ,\n              value: this.state.handle,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.customError,\n              children: errors.general\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              disabled: loading,\n              children: [\"Signup\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 30,\n                className: classes.progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 53\n              }, this), \" Login \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  signupUser\n})(withStyles(styles)(signup));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/pages/signup.js"],"names":["React","Component","withStyles","PropTypes","AppLogo","Link","Card","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","styles","theme","spreadThis","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","props","history","handleChange","target","name","value","errors","UNSAFE_componentWillReceiveProps","nextProps","UI","render","classes","form","card","logo","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","user","logoutUser","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom';\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps){\n        if (nextProps.UI.errors) {\n            this.setState({ errors: nextProps.UI.errors });\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        this.props.signupUser(newUserData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors } = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                <Card className={classes.card}>\n                <img src={AppLogo} alt=\"plantrses/p\" claslogoplantrslogoe={classes.logo} />\n                <Typography variant=\"h3\" className={classes.pageTitle}>\n                    Signup\n                </Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField \n                        id=\"email\" \n                        name=\"email\" \n                        type=\"email\" \n                        label=\"Email\" \n                        className={classes.textField} \n                        helperText={errors.email} // displays the error below the email field\n                        error={errors.email ? true : false} // checks whether there's error or not\n                        value={this.state.email} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"password\" \n                        name=\"password\" \n                        type=\"password\" \n                        label=\"Password\" \n                        className={classes.textField} \n                        helperText={errors.password} // displays the error below the password field\n                        error={errors.password ? true : false} // checks whether there's error or not\n                        value={this.state.password} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"confirmPassword\" \n                        name=\"confirmPassword\" \n                        type=\"password\" \n                        label=\"Confirm Password\" \n                        className={classes.textField} \n                        helperText={errors.confirmPassword} // displays the error below the confirmPassword field\n                        error={errors.confirmPassword ? true : false} // checks whether there's error or not\n                        value={this.state.confirmPassword} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"handle\" \n                        name=\"handle\" \n                        type=\"text\" \n                        label=\"Handle\" \n                        className={classes.textField} \n                        helperText={errors.handle} // displays the error below the handle field\n                        error={errors.handle ? true : false} // checks whether there's error or not\n                        value={this.state.handle} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button \n                        type=\"submit\" \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={classes.button}\n                        disabled={loading}\n                    >\n                        Signup\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress}/>\n                        )}\n                    </Button>\n                    <br/>\n                    <small>Already have an account? <br/> Login <Link to=\"/login\">here</Link></small>\n                </form>\n                </Card>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(\n    mapStateToProps, \n    { signupUser }\n)(withStyles(styles)(signup));\n"]},"metadata":{},"sourceType":"module"}