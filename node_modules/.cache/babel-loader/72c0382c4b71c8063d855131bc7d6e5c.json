{"ast":null,"code":"import _classCallCheck from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/extra/is295/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/pages/home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Plant from '../components/Plant';\nimport Profile from '../components/Profile';\nimport { connect } from 'react-redux';\nimport { getPlants } from '../redux/actions/dataActions';\n\nvar home = /*#__PURE__*/function (_Component) {\n  _inherits(home, _Component);\n\n  function home() {\n    _classCallCheck(this, home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(home).apply(this, arguments));\n  }\n\n  _createClass(home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPlants();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props$data = this.props.data,\n          plants = _this$props$data.plants,\n          loading = _this$props$data.loading;\n      var recentPlantsMarkup = !loading ? plants.map(function (plant) {\n        return /*#__PURE__*/React.createElement(Plant, {\n          key: plant.plantId,\n          plant: plant,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 35\n          }\n        });\n      }) : /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, \"Loading...\");\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, recentPlantsMarkup), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Profile, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return home;\n}(Component);\n\nhome.propTypes = {\n  getPlants: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPlants: getPlants\n})(home);","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/pages/home.js"],"names":["React","Component","axios","Grid","PropTypes","Plant","Profile","connect","getPlants","home","props","data","plants","loading","recentPlantsMarkup","map","plant","plantId","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;IAEMC,I;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWF,SAAX;AACH;;;6BACQ;AAAA;;AAAA,6BACuB,KAAKE,KAAL,CAAWC,IADlC;AAAA,UACGC,MADH,oBACGA,MADH;AAAA,UACWC,OADX,oBACWA,OADX;AAEL,UAAIC,kBAAkB,GAAG,CAACD,OAAD,GACrBD,MAAM,CAACG,GAAP,CAAW,UAACC,KAAD;AAAA,4BAAW,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,OAAlB;AAA2B,UAAA,KAAK,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AAAA,OAAX,CADqB,gBAGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAKA,0BACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,kBADL,CADJ,eAII,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CADJ;AAUH;;;;EArBcb,S;;AAwBnBQ,IAAI,CAACS,SAAL,GAAiB;AACbV,EAAAA,SAAS,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADb;AAEbT,EAAAA,IAAI,EAAEP,SAAS,CAACiB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BZ,IAAAA,IAAI,EAAEY,KAAK,CAACZ;AADkB,GAAL;AAAA,CAA7B;;AAIA,eAAeJ,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,SAAS,EAATA;AAAF,CAAlB,CAAP,CAAwCC,IAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nimport Plant from '../components/Plant';\nimport Profile from '../components/Profile';\n\nimport { connect } from 'react-redux';\nimport { getPlants } from '../redux/actions/dataActions';\n\nclass home extends Component {\n    componentDidMount(){\n        this.props.getPlants();\n    }\n    render() {\n        const { plants, loading } = this.props.data;\n        let recentPlantsMarkup = !loading ? (\n            plants.map((plant) => <Plant key={plant.plantId} plant={plant} />)\n        ) : (\n            <p>Loading...</p>\n        );\n        return (\n            <Grid container spacing={2}>\n                <Grid item sm={8} xs={12}>\n                    {recentPlantsMarkup}\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Profile />\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nhome.propTypes = {\n    getPlants: PropTypes.func.isRequired,\n    data: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    data: state.data\n})\n\nexport default connect(mapStateToProps, { getPlants })(home);\n"]},"metadata":{},"sourceType":"module"}