{"ast":null,"code":"import _defineProperty from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectSpread from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Component}from'react';import withStyles from'@material-ui/core/styles/withStyles';import AppLogo from'../images/plantrslogo.png';import{Link}from'react-router-dom';// Material UIs\nimport Card from'@material-ui/core/Card';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{TextField}from'@material-ui/core';import{Button}from'@material-ui/core';import CircularProgress from'@material-ui/core/CircularProgress';// Redux stuff\nimport{connect}from'react-redux';import{signupUser}from'../redux/actions/userActions';var styles=function styles(theme){return _objectSpread({},theme.spreadThis);};var signup=/*#__PURE__*/function(_Component){_inherits(signup,_Component);var _super=_createSuper(signup);function signup(){var _this;_classCallCheck(this,signup);_this=_super.call(this);_this.handleSubmit=function(event){event.preventDefault();_this.setState({loading:true});var newUserData={email:_this.state.email,password:_this.state.password,confirmPassword:_this.state.confirmPassword,handle:_this.state.handle};_this.props.signupUser(newUserData,_this.props.history);};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.state={email:'',password:'',confirmPassword:'',handle:'',errors:{}};return _this;}_createClass(signup,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,loading=_this$props.UI.loading;var errors=this.state.errors;return/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.form},/*#__PURE__*/React.createElement(Grid,{item:true,sm:true}),/*#__PURE__*/React.createElement(Grid,{item:true,sm:true},/*#__PURE__*/React.createElement(Card,{className:classes.card},/*#__PURE__*/React.createElement(\"img\",{src:AppLogo,alt:\"plantrses/p\",claslogoplantrslogoe:classes.logo}),/*#__PURE__*/React.createElement(Typography,{variant:\"h3\",className:classes.pageTitle},\"Signup\"),/*#__PURE__*/React.createElement(\"form\",{noValidate:true,onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(TextField,{id:\"email\",name:\"email\",type:\"email\",label:\"Email\",className:classes.textField,helperText:errors.email// displays the error below the email field\n,error:errors.email?true:false// checks whether there's error or not\n,value:this.state.email,onChange:this.handleChange,fullWidth:true}),/*#__PURE__*/React.createElement(TextField,{id:\"password\",name:\"password\",type:\"password\",label:\"Password\",className:classes.textField,helperText:errors.password// displays the error below the password field\n,error:errors.password?true:false// checks whether there's error or not\n,value:this.state.password,onChange:this.handleChange,fullWidth:true}),/*#__PURE__*/React.createElement(TextField,{id:\"confirmPassword\",name:\"confirmPassword\",type:\"password\",label:\"Confirm Password\",className:classes.textField,helperText:errors.confirmPassword// displays the error below the confirmPassword field\n,error:errors.confirmPassword?true:false// checks whether there's error or not\n,value:this.state.confirmPassword,onChange:this.handleChange,fullWidth:true}),/*#__PURE__*/React.createElement(TextField,{id:\"handle\",name:\"handle\",type:\"text\",label:\"Handle\",className:classes.textField,helperText:errors.handle// displays the error below the handle field\n,error:errors.handle?true:false// checks whether there's error or not\n,value:this.state.handle,onChange:this.handleChange,fullWidth:true}),errors.general&&/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",className:classes.customError},errors.general),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.button,disabled:loading},\"Signup\",loading&&/*#__PURE__*/React.createElement(CircularProgress,{size:30,className:classes.progress})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"small\",null,\"Already have an account? \",/*#__PURE__*/React.createElement(\"br\",null),\" Login \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"here\"))))),/*#__PURE__*/React.createElement(Grid,{item:true,sm:true}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props){if(props.UI.errors){return{errors:props.UI.errors};}return null;}}]);return signup;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.user,UI:state.UI};};export default connect(mapStateToProps,{signupUser:signupUser})(withStyles(styles)(signup));","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/pages/signup.js"],"names":["React","Component","withStyles","AppLogo","Link","Card","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","styles","theme","spreadThis","signup","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","props","history","handleChange","target","name","value","errors","classes","UI","form","card","logo","pageTitle","textField","general","customError","button","progress","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom';\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        }\n    }\n    static getDerivedStateFromProps(props) {\n        if (props.UI.errors) {\n          return {\n            errors: props.UI.errors\n          }\n        }\n        return null;\n      }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        this.props.signupUser(newUserData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors } = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                <Card className={classes.card}>\n                <img src={AppLogo} alt=\"plantrses/p\" claslogoplantrslogoe={classes.logo} />\n                <Typography variant=\"h3\" className={classes.pageTitle}>\n                    Signup\n                </Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField \n                        id=\"email\" \n                        name=\"email\" \n                        type=\"email\" \n                        label=\"Email\" \n                        className={classes.textField} \n                        helperText={errors.email} // displays the error below the email field\n                        error={errors.email ? true : false} // checks whether there's error or not\n                        value={this.state.email} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"password\" \n                        name=\"password\" \n                        type=\"password\" \n                        label=\"Password\" \n                        className={classes.textField} \n                        helperText={errors.password} // displays the error below the password field\n                        error={errors.password ? true : false} // checks whether there's error or not\n                        value={this.state.password} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"confirmPassword\" \n                        name=\"confirmPassword\" \n                        type=\"password\" \n                        label=\"Confirm Password\" \n                        className={classes.textField} \n                        helperText={errors.confirmPassword} // displays the error below the confirmPassword field\n                        error={errors.confirmPassword ? true : false} // checks whether there's error or not\n                        value={this.state.confirmPassword} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"handle\" \n                        name=\"handle\" \n                        type=\"text\" \n                        label=\"Handle\" \n                        className={classes.textField} \n                        helperText={errors.handle} // displays the error below the handle field\n                        error={errors.handle ? true : false} // checks whether there's error or not\n                        value={this.state.handle} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button \n                        type=\"submit\" \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={classes.button}\n                        disabled={loading}\n                    >\n                        Signup\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress}/>\n                        )}\n                    </Button>\n                    <br/>\n                    <small>Already have an account? <br/> Login <Link to=\"/login\">here</Link></small>\n                </form>\n                </Card>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(\n    mapStateToProps, \n    { signupUser }\n)(withStyles(styles)(signup));\n"]},"metadata":{},"sourceType":"module"}