{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/pages/signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom'; // Material UIs\n\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({ ...theme\n});\n\nclass signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      axios.post('/signup', newUserData).then(res => {\n        console.log(res.data);\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/'); // redirects to homepage upon successful login\n      }).catch(err => {\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: AppLogo,\n            alt: \"plantrses/p\",\n            claslogoplantrslogoe: classes.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            className: classes.pageTitle,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              label: \"Email\",\n              className: classes.textField,\n              helperText: errors.email // displays the error below the email field\n              ,\n              error: errors.email ? true : false // checks whether there's error or not\n              ,\n              value: this.state.email,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              name: \"password\",\n              type: \"password\",\n              label: \"Password\",\n              className: classes.textField,\n              helperText: errors.password // displays the error below the password field\n              ,\n              error: errors.password ? true : false // checks whether there's error or not\n              ,\n              value: this.state.password,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              type: \"password\",\n              label: \"Confirm Password\",\n              className: classes.textField,\n              helperText: errors.confirmPassword // displays the error below the confirmPassword field\n              ,\n              error: errors.confirmPassword ? true : false // checks whether there's error or not\n              ,\n              value: this.state.confirmPassword,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"handle\",\n              name: \"handle\",\n              type: \"text\",\n              label: \"Handle\",\n              className: classes.textField,\n              helperText: errors.handle // displays the error below the handle field\n              ,\n              error: errors.handle ? true : false // checks whether there's error or not\n              ,\n              value: this.state.handle,\n              onChange: this.handleChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.customError,\n              children: errors.general\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              disabled: loading,\n              children: [\"Signup\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 30,\n                className: classes.progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 53\n              }, this), \" Login \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(signup);","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/pages/signup.js"],"names":["React","Component","withStyles","PropTypes","AppLogo","axios","Link","Card","Grid","Typography","TextField","Button","CircularProgress","styles","theme","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","form","card","logo","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst styles = (theme) => ({\n    ...theme\n});\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            loading: false,\n            errors: {}\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        }\n        axios.post('/signup', newUserData)\n            .then(res => {\n                console.log(res.data);\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n                this.setState({\n                    loading: false\n                });\n                this.props.history.push('/'); // redirects to homepage upon successful login\n            })\n            .catch(err => {\n                this.setState({\n                    errors: err.response.data,\n                    loading: false\n                })\n            })\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { errors, loading } = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                <Card className={classes.card}>\n                <img src={AppLogo} alt=\"plantrses/p\" claslogoplantrslogoe={classes.logo} />\n                <Typography variant=\"h3\" className={classes.pageTitle}>\n                    Signup\n                </Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField \n                        id=\"email\" \n                        name=\"email\" \n                        type=\"email\" \n                        label=\"Email\" \n                        className={classes.textField} \n                        helperText={errors.email} // displays the error below the email field\n                        error={errors.email ? true : false} // checks whether there's error or not\n                        value={this.state.email} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"password\" \n                        name=\"password\" \n                        type=\"password\" \n                        label=\"Password\" \n                        className={classes.textField} \n                        helperText={errors.password} // displays the error below the password field\n                        error={errors.password ? true : false} // checks whether there's error or not\n                        value={this.state.password} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"confirmPassword\" \n                        name=\"confirmPassword\" \n                        type=\"password\" \n                        label=\"Confirm Password\" \n                        className={classes.textField} \n                        helperText={errors.confirmPassword} // displays the error below the confirmPassword field\n                        error={errors.confirmPassword ? true : false} // checks whether there's error or not\n                        value={this.state.confirmPassword} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"handle\" \n                        name=\"handle\" \n                        type=\"text\" \n                        label=\"Handle\" \n                        className={classes.textField} \n                        helperText={errors.handle} // displays the error below the handle field\n                        error={errors.handle ? true : false} // checks whether there's error or not\n                        value={this.state.handle} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button \n                        type=\"submit\" \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={classes.button}\n                        disabled={loading}\n                    >\n                        Signup\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress}/>\n                        )}\n                    </Button>\n                    <br/>\n                    <small>Already have an account? <br/> Login <Link to=\"/login\">here</Link></small>\n                </form>\n                </Card>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(signup);\n"]},"metadata":{},"sourceType":"module"}