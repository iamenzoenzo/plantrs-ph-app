{"ast":null,"code":"import _toConsumableArray from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Volumes/External/MasterGithub/plantrs-ph-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SET_PLANTS,SET_PLANT,LIKE_PLANT,UNLIKE_PLANT,LOADING_DATA,DELETE_PLANT,POST_PLANT,SUBMIT_COMMENT}from'../types';var initialState={plants:[],plant:{},loading:false};export default function dataReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LOADING_DATA:return _objectSpread(_objectSpread({},state),{},{loading:true});case SET_PLANTS:return _objectSpread(_objectSpread({},state),{},{plants:action.payload,loading:false});case SET_PLANT:return _objectSpread(_objectSpread({},state),{},{plant:action.payload});case LIKE_PLANT:case UNLIKE_PLANT:var index=state.plants.findIndex(function(plant){return plant.plantId===action.payload.plantId;});state.plants[index]=action.payload;if(state.plant.plantId===action.payload.plantId){state.plant=action.payload;}return _objectSpread({},state);case DELETE_PLANT:index=state.plants.findIndex(function(plant){return plant.plantId===action.payload;});state.plants.splice(index,1);return _objectSpread({},state);case POST_PLANT:return _objectSpread(_objectSpread({},state),{},{plants:[action.payload].concat(_toConsumableArray(state.plants))});case SUBMIT_COMMENT:return _objectSpread(_objectSpread({},state),{},{plant:_objectSpread(_objectSpread({},state.plant),{},{comments:[action.payload].concat(_toConsumableArray(state.plant.comments))})});default:return state;}}","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/redux/reducers/dataReducer.js"],"names":["SET_PLANTS","SET_PLANT","LIKE_PLANT","UNLIKE_PLANT","LOADING_DATA","DELETE_PLANT","POST_PLANT","SUBMIT_COMMENT","initialState","plants","plant","loading","dataReducer","state","action","type","payload","index","findIndex","plantId","splice","comments"],"mappings":"+UAAA,OACIA,UADJ,CAEIC,SAFJ,CAGIC,UAHJ,CAIIC,YAJJ,CAKIC,YALJ,CAMIC,YANJ,CAOIC,UAPJ,CAQIC,cARJ,KASO,UATP,CAWA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,MAAM,CAAE,EADS,CAEjBC,KAAK,CAAE,EAFU,CAGjBC,OAAO,CAAE,KAHQ,CAArB,CAMA,cAAe,SAASC,CAAAA,WAAT,EAAkD,IAA7BC,CAAAA,KAA6B,2DAArBL,YAAqB,IAAPM,CAAAA,MAAO,2CAC7D,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKX,CAAAA,YAAL,CACI,sCACOS,KADP,MAEIF,OAAO,CAAE,IAFb,GAIJ,IAAKX,CAAAA,UAAL,CACI,sCACOa,KADP,MAEIJ,MAAM,CAAEK,MAAM,CAACE,OAFnB,CAGIL,OAAO,CAAE,KAHb,GAKJ,IAAKV,CAAAA,SAAL,CACI,sCACOY,KADP,MAEIH,KAAK,CAAEI,MAAM,CAACE,OAFlB,GAIJ,IAAKd,CAAAA,UAAL,CACA,IAAKC,CAAAA,YAAL,CACI,GAAIc,CAAAA,KAAK,CAAGJ,KAAK,CAACJ,MAAN,CAAaS,SAAb,CAAuB,SAACR,KAAD,QAAWA,CAAAA,KAAK,CAACS,OAAN,GAAkBL,MAAM,CAACE,OAAP,CAAeG,OAA5C,EAAvB,CAAZ,CACAN,KAAK,CAACJ,MAAN,CAAaQ,KAAb,EAAsBH,MAAM,CAACE,OAA7B,CACA,GAAIH,KAAK,CAACH,KAAN,CAAYS,OAAZ,GAAwBL,MAAM,CAACE,OAAP,CAAeG,OAA3C,CAAoD,CAChDN,KAAK,CAACH,KAAN,CAAcI,MAAM,CAACE,OAArB,CACH,CACD,wBACOH,KADP,EAGJ,IAAKR,CAAAA,YAAL,CACIY,KAAK,CAAGJ,KAAK,CAACJ,MAAN,CAAaS,SAAb,CAAuB,SAACR,KAAD,QAAWA,CAAAA,KAAK,CAACS,OAAN,GAAkBL,MAAM,CAACE,OAApC,EAAvB,CAAR,CACAH,KAAK,CAACJ,MAAN,CAAaW,MAAb,CAAoBH,KAApB,CAA2B,CAA3B,EACA,wBACOJ,KADP,EAGJ,IAAKP,CAAAA,UAAL,CACI,sCACOO,KADP,MAEIJ,MAAM,EACFK,MAAM,CAACE,OADL,4BAECH,KAAK,CAACJ,MAFP,EAFV,GAOJ,IAAKF,CAAAA,cAAL,CACI,sCACOM,KADP,MAEIH,KAAK,gCACEG,KAAK,CAACH,KADR,MAEDW,QAAQ,EAAGP,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,KAAN,CAAYW,QAAlC,EAFP,EAFT,GAOJ,QACI,MAAOR,CAAAA,KAAP,CAlDR,CAoDH","sourcesContent":["import { \n    SET_PLANTS,\n    SET_PLANT, \n    LIKE_PLANT, \n    UNLIKE_PLANT, \n    LOADING_DATA, \n    DELETE_PLANT, \n    POST_PLANT,\n    SUBMIT_COMMENT \n} from '../types';\n\nconst initialState = {\n    plants: [],\n    plant: {},\n    loading: false\n};\n\nexport default function dataReducer(state = initialState, action){\n    switch(action.type){\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_PLANTS:\n            return {\n                ...state,\n                plants: action.payload,\n                loading: false\n            };\n        case SET_PLANT:\n            return {\n                ...state,\n                plant: action.payload\n            };\n        case LIKE_PLANT:\n        case UNLIKE_PLANT:\n            let index = state.plants.findIndex((plant) => plant.plantId === action.payload.plantId);\n            state.plants[index] = action.payload;\n            if (state.plant.plantId === action.payload.plantId) {\n                state.plant = action.payload;\n            }\n            return {\n                ...state\n            };\n        case DELETE_PLANT:\n            index = state.plants.findIndex((plant) => plant.plantId === action.payload);\n            state.plants.splice(index, 1);\n            return {\n                ...state\n            };\n        case POST_PLANT:\n            return {\n                ...state,\n                plants: [\n                    action.payload,\n                    ...state.plants\n                ]\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                plant: {\n                    ...state.plant,\n                    comments: [action.payload, ...state.plant.comments]\n                }\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}