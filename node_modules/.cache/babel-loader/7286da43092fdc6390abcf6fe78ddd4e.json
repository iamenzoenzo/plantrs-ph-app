{"ast":null,"code":"var _jsxFileName = \"/Volumes/extra/is295/plantrs-ph-app/src/components/DeletePlant.js\";\nimport React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton'; // MUI stuff\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions'; // Icons\n\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { deletePlant } from '../redux/actions/dataActions';\nconst styles = {\n  deleteButton: {\n    position: 'absolute',\n    left: '90%',\n    top: '2%'\n  }\n};\n\nclass DeletePlant extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.deletePlant = () => {\n      this.props.deletePlant(this.props.plantId);\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Delete Plant\",\n      onClick: this.handleOpen,\n      btnClassName: classes.deleteButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutline, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"Are you sure you want to delete this plant?\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"Note that this action is irreversible.\"), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.deletePlant,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"Delete\"))));\n  }\n\n}\n\nDeletePlant.propTypes = {\n  deletePlant: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  plantId: PropTypes.string.isRequired\n};\nexport default connect(null, {\n  deletePlant\n})(withStyles(styles)(DeletePlant));","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/components/DeletePlant.js"],"names":["React","Component","Fragment","withStyles","PropTypes","MyButton","Button","Dialog","DialogTitle","DialogContent","DialogActions","DeleteOutline","connect","deletePlant","styles","deleteButton","position","left","top","DeletePlant","state","open","handleOpen","setState","handleClose","props","plantId","render","classes","propTypes","func","isRequired","object","string"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\n\n// MUI stuff\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\n// Icons\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { deletePlant } from '../redux/actions/dataActions';\n\nconst styles = {\n    deleteButton: {\n        position: 'absolute',\n        left: '90%',\n        top: '2%'\n    }\n}\n\nclass DeletePlant extends Component {\n    state = {\n        open: false\n    };\n    handleOpen = () => {\n        this.setState({ open: true });\n    }\n    handleClose = () => {\n        this.setState({ open: false });\n    }\n    deletePlant = () => {\n        this.props.deletePlant(this.props.plantId)\n        this.setState({ open: false });\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <MyButton tip=\"Delete Plant\"\n                onClick={this.handleOpen}\n                btnClassName={classes.deleteButton}\n                >\n                    <DeleteOutline color=\"secondary\"/>\n                </MyButton>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth\n                    maxWidth=\"sm\"\n                    >\n                        <DialogTitle>Are you sure you want to delete this plant?</DialogTitle>\n                        <DialogContent>Note that this action is irreversible.</DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.deletePlant} color=\"secondary\">\n                                Delete\n                            </Button>\n                        </DialogActions>\n\n                    </Dialog>\n            </Fragment>\n        )\n    }\n}\n\nDeletePlant.propTypes = {\n    deletePlant: PropTypes.func.isRequired,\n    classes: PropTypes.object.isRequired,\n    plantId: PropTypes.string.isRequired\n}\n\nexport default connect(null, { deletePlant })(withStyles(styles)(DeletePlant));\n"]},"metadata":{},"sourceType":"module"}