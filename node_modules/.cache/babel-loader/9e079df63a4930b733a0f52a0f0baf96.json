{"ast":null,"code":"var _jsxFileName = \"/Volumes/External/MasterGithub/plantrs-ph-app/src/pages/signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom'; // Material UIs\n\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // Redux stuff\n\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({ ...theme.spreadThis\n});\n\nclass signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      this.props.signupUser(newUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.UI.errors) {\n      return {\n        errors: props.UI.errors\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: AppLogo,\n      alt: \"plantrses/p\",\n      claslogoplantrslogoe: classes.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Signup\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      className: classes.textField,\n      helperText: errors.email // displays the error below the email field\n      ,\n      error: errors.email ? true : false // checks whether there's error or not\n      ,\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      className: classes.textField,\n      helperText: errors.password // displays the error below the password field\n      ,\n      error: errors.password ? true : false // checks whether there's error or not\n      ,\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      label: \"Confirm Password\",\n      className: classes.textField,\n      helperText: errors.confirmPassword // displays the error below the confirmPassword field\n      ,\n      error: errors.confirmPassword ? true : false // checks whether there's error or not\n      ,\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"handle\",\n      name: \"handle\",\n      type: \"text\",\n      label: \"Handle\",\n      className: classes.textField,\n      helperText: errors.handle // displays the error below the handle field\n      ,\n      error: errors.handle ? true : false // checks whether there's error or not\n      ,\n      value: this.state.handle,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, \"Signup\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 30,\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Already have an account? \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 53\n      }\n    }), \" Login \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 65\n      }\n    }, \"here\"))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  signupUser\n})(withStyles(styles)(signup));","map":{"version":3,"sources":["/Volumes/External/MasterGithub/plantrs-ph-app/src/pages/signup.js"],"names":["React","Component","withStyles","PropTypes","AppLogo","Link","Card","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","styles","theme","spreadThis","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","props","history","handleChange","target","name","value","errors","getDerivedStateFromProps","UI","render","classes","form","card","logo","pageTitle","textField","general","customError","button","progress","propTypes","object","isRequired","user","logoutUser","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport AppLogo from '../images/plantrslogo.png';\nimport { Link } from 'react-router-dom';\n\n// Material UIs\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// Redux stuff\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n    ...theme.spreadThis\n});\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            errors: {}\n        }\n    }\n    static getDerivedStateFromProps(props) {\n        if (props.UI.errors) {\n          return {\n            errors: props.UI.errors\n          }\n        }\n        return null;\n      }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        this.props.signupUser(newUserData, this.props.history);\n    };\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        const { classes, UI: { loading } } = this.props;\n        const { errors } = this.state;\n        return (\n            <Grid container className={classes.form}>\n                <Grid item sm/>\n                <Grid item sm>\n                <Card className={classes.card}>\n                <img src={AppLogo} alt=\"plantrses/p\" claslogoplantrslogoe={classes.logo} />\n                <Typography variant=\"h3\" className={classes.pageTitle}>\n                    Signup\n                </Typography>\n                <form noValidate onSubmit={this.handleSubmit}>\n                    <TextField \n                        id=\"email\" \n                        name=\"email\" \n                        type=\"email\" \n                        label=\"Email\" \n                        className={classes.textField} \n                        helperText={errors.email} // displays the error below the email field\n                        error={errors.email ? true : false} // checks whether there's error or not\n                        value={this.state.email} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"password\" \n                        name=\"password\" \n                        type=\"password\" \n                        label=\"Password\" \n                        className={classes.textField} \n                        helperText={errors.password} // displays the error below the password field\n                        error={errors.password ? true : false} // checks whether there's error or not\n                        value={this.state.password} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"confirmPassword\" \n                        name=\"confirmPassword\" \n                        type=\"password\" \n                        label=\"Confirm Password\" \n                        className={classes.textField} \n                        helperText={errors.confirmPassword} // displays the error below the confirmPassword field\n                        error={errors.confirmPassword ? true : false} // checks whether there's error or not\n                        value={this.state.confirmPassword} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    <TextField \n                        id=\"handle\" \n                        name=\"handle\" \n                        type=\"text\" \n                        label=\"Handle\" \n                        className={classes.textField} \n                        helperText={errors.handle} // displays the error below the handle field\n                        error={errors.handle ? true : false} // checks whether there's error or not\n                        value={this.state.handle} \n                        onChange={this.handleChange} \n                        fullWidth/>\n                    {errors.general && (\n                        <Typography variant=\"body2\" className={classes.customError}>\n                            {errors.general}\n                        </Typography>\n                    )}\n                    <Button \n                        type=\"submit\" \n                        variant=\"contained\" \n                        color=\"primary\" \n                        className={classes.button}\n                        disabled={loading}\n                    >\n                        Signup\n                        {loading && (\n                            <CircularProgress size={30} className={classes.progress}/>\n                        )}\n                    </Button>\n                    <br/>\n                    <small>Already have an account? <br/> Login <Link to=\"/login\">here</Link></small>\n                </form>\n                </Card>\n                </Grid>\n                <Grid item sm/>\n            </Grid>\n        );\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    UI: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    UI: state.UI\n})\n\nexport default connect(\n    mapStateToProps, \n    { signupUser }\n)(withStyles(styles)(signup));\n"]},"metadata":{},"sourceType":"module"}