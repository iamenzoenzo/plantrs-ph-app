{"ast":null,"code":"import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, LIKE_PLANT, UNLIKE_PLANT } from '../types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return { ...state,\n        authenticated: true\n      };\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return {\n        authenticated: true,\n        loading: false,\n        ...action.payload\n      };\n\n    case LOADING_USER:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_PLANT:\n      return { ...state,\n        likes: [...state.likes, {\n          userHandle: state.credentials.handle,\n          plantId: action.payload.plantId\n        }]\n      };\n\n    case UNLIKE_PLANT:\n      return { ...state,\n        likes: state.likes.filter(like => like.plantId !== action.payload.plantId)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Volumes/extra/is295/plantrs-ph-app/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","LIKE_PLANT","UNLIKE_PLANT","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","userHandle","handle","plantId","filter","like"],"mappings":"AAAA,SACIA,QADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,EAKIC,UALJ,EAMIC,YANJ,QAOO,UAPP;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,aAAa,EAAE;AALE,CAArB;AAQA,eAAe,UAASC,KAAK,GAAGN,YAAjB,EAA+BO,MAA/B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,iBAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,aAAa,EAAE;AAFZ,OAAP;;AAIJ,SAAKL,mBAAL;AACI,aAAOI,YAAP;;AACJ,SAAKN,QAAL;AACI,aAAO;AACHO,QAAAA,aAAa,EAAE,IADZ;AAEHC,QAAAA,OAAO,EAAE,KAFN;AAGH,WAAGK,MAAM,CAACE;AAHP,OAAP;;AAKJ,SAAKZ,YAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,UAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACF,KADN,EAEH;AACIM,UAAAA,UAAU,EAAEJ,KAAK,CAACH,WAAN,CAAkBQ,MADlC;AAEIC,UAAAA,OAAO,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAF5B,SAFG;AAFJ,OAAP;;AAUJ,SAAKb,YAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CACFC,IAAD,IAAUA,IAAI,CAACF,OAAL,KAAiBL,MAAM,CAACE,OAAP,CAAeG,OADvC;AAFJ,OAAP;;AAMJ;AACI,aAAON,KAAP;AAtCR;AAwCH","sourcesContent":["import { \n    SET_USER, \n    SET_AUTHENTICATED, \n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    LIKE_PLANT, \n    UNLIKE_PLANT\n} from '../types';\n\nconst initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n};\n\nexport default function(state = initialState, action){\n    switch(action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                authenticated: true,\n                loading: false,\n                ...action.payload\n            };\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            };\n        case LIKE_PLANT:\n            return {\n                ...state,\n                likes: [\n                    ...state.likes,\n                    {\n                        userHandle: state.credentials.handle,\n                        plantId: action.payload.plantId\n                    }\n                ]\n            };\n        case UNLIKE_PLANT:\n            return {\n                ...state,\n                likes: state.likes.filter(\n                    (like) => like.plantId !== action.payload.plantId\n                )\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}